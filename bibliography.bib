@article{harman2001search,
  title={Search-based software engineering},
  author={Harman, Mark and Jones, Bryan F},
  journal={Information and software Technology},
  volume={43},
  number={14},
  pages={833--839},
  year={2001},
  publisher={Elsevier}
}

@inproceedings{Mao:2016:SMA:2931037.2931054,
 author = {Mao, Ke and Harman, Mark and Jia, Yue},
 title = {Sapienz: Multi-objective Automated Testing for Android Applications},
 booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
 series = {ISSTA 2016},
 year = {2016},
 isbn = {978-1-4503-4390-9},
 location = {Saarbr\&\#252;cken, Germany},
 pages = {94--105},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2931037.2931054},
 doi = {10.1145/2931037.2931054},
 acmid = {2931054},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Android, Search-based software testing, Test generation},
}

@article{Georges:2008:JPE:1449955.1449794,
 author = {Georges, Andy and Eeckhout, Lieven and Buytaert, Dries},
 title = {Java Performance Evaluation Through Rigorous Replay Compilation},
 journal = {SIGPLAN Not.},
 issue_date = {September 2008},
 volume = {43},
 number = {10},
 month = oct,
 year = {2008},
 issn = {0362-1340},
 pages = {367--384},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/1449955.1449794},
 doi = {10.1145/1449955.1449794},
 acmid = {1449794},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {benchmarking, java, matched-pair comparison, performance evaluation, replay compilation, virtual machine},
}

@inproceedings{barr2015automated,
  title={Automated software transplantation},
  author={Barr, Earl T and Harman, Mark and Jia, Yue and Marginean, Alexandru and Petke, Justyna},
  booktitle={Proceedings of the 2015 International Symposium on Software Testing and Analysis},
  pages={257--269},
  year={2015},
  organization={ACM}
}

@inproceedings{fan2015,
  title={Deep parameter optimisation},
  author={Wu, Fan and Weimer, Westley and Harman, Mark and Jia, Yue and Krinke, Jens},
  booktitle={Proceedings of the 2015 Annual Conference on Genetic and Evolutionary Computation},
  pages={1375--1382},
  year={2015},
  organization={ACM}
}

@inproceedings{harman2014babel,
  title={Babel pidgin: SBSE can grow and graft entirely new functionality into a real world system},
  author={Harman, Mark and Jia, Yue and Langdon, William B},
  booktitle={International Symposium on Search Based Software Engineering},
  pages={247--252},
  year={2014},
  organization={Springer}
}

@inproceedings{petke2014using,
  title={Using genetic improvement and code transplants to specialise a C++ program to a problem class},
  author={Petke, Justyna and Harman, Mark and Langdon, William B and Weimer, Westley},
  booktitle={European Conference on Genetic Programming},
  pages={137--149},
  year={2014},
  organization={Springer}
}

@inproceedings{langdon2014improving,
  title={Improving 3D medical image registration CUDA software with genetic programming},
  author={Langdon, William B and Modat, Marc and Petke, Justyna and Harman, Mark},
  booktitle={Proceedings of the 2014 Annual Conference on Genetic and Evolutionary Computation},
  pages={951--958},
  year={2014},
  organization={ACM}
}

@inproceedings{li2015sbselector,
  title={SBSelector: Search based component selection for budget hardware},
  author={Li, Lingbo and Harman, Mark and Wu, Fan and Zhang, Yuanyuan},
  booktitle={International Symposium on Search Based Software Engineering},
  pages={289--294},
  year={2015},
  organization={Springer}
}

@inproceedings{harman2007current,
  title={The current state and future of search based software engineering},
  author={Harman, Mark},
  booktitle={2007 Future of Software Engineering},
  pages={342--357},
  year={2007},
  organization={IEEE Computer Society}
}

@article{Harman2001833,
title = "Search-based software engineering ",
journal = "Information and Software Technology ",
volume = "43",
number = "14",
pages = "833 - 839",
year = "2001",
note = "",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/S0950-5849(01)00189-6",
url = "http://www.sciencedirect.com/science/article/pii/S0950584901001896",
author = "Mark Harman and Bryan F Jones",
keywords = "Software engineering",
keywords = "Metaheuristic",
keywords = "Genetic algorithm "
}

@inproceedings{Bruce:2015:REC:2739480.2754752,
 author = {Bruce, Bobby R. and Petke, Justyna and Harman, Mark},
 title = {Reducing Energy Consumption Using Genetic Improvement},
 booktitle = {Proceedings of the 2015 Annual Conference on Genetic and Evolutionary Computation},
 series = {GECCO '15},
 year = {2015},
 isbn = {978-1-4503-3472-3},
 location = {Madrid, Spain},
 pages = {1327--1334},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/2739480.2754752},
 doi = {10.1145/2739480.2754752},
 acmid = {2754752},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {boolean satisfiability, energy consumption, energy efficiency, energy optimisation, genetic improvement, gi, minisat, non-functional improvement, optimisation, sat solver, sbse, search based software engineering},
}


@book{poli2008field,
  title={A field guide to genetic programming},
  author={Poli, Riccardo and Langdon, William B and McPhee, Nicholas F and Koza, John R},
  year={2008},
  publisher={Lulu. com}
}

@INPROCEEDINGS{6227211,
author={C. Le Goues and M. Dewey-Vogt and S. Forrest and W. Weimer},
booktitle={2012 34th International Conference on Software Engineering (ICSE)},
title={A systematic study of automated program repair: Fixing 55 out of 105 bugs for \$8 each},
year={2012},
pages={3-13},
keywords={C language;cloud computing;genetic algorithms;program debugging;public domain software;software cost estimation;software maintenance;GenProg;algorithmic improvement;automated program repair;cloud computing resource;defect repair;genetic programming;grounded human-competitive cost measurement;off-the-shelf C program;open-source program;program bug;real-world program;repair cost;systematic evaluation;Benchmark testing;Cloud computing;Computer bugs;Genetic programming;Maintenance engineering;Open source software;Systematics;automated program repair;cloud computing;genetic programming},
doi={10.1109/ICSE.2012.6227211},
ISSN={0270-5257},
month={June},}

@inproceedings{Barr:2014:PSH:2635868.2635898,
 author = {Barr, Earl T. and Brun, Yuriy and Devanbu, Premkumar and Harman, Mark and Sarro, Federica},
 title = {The Plastic Surgery Hypothesis},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {306--317},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2635868.2635898},
 doi = {10.1145/2635868.2635898},
 acmid = {2635898},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Software graftability, automated program repair, code reuse, empirical software engineering, mining software repositories},
}

% Tools used for the implemenation
@book{parr2013definitive,
  title={The definitive ANTLR 4 reference},
  author={Parr, Terence},
  year={2013},
  publisher={Pragmatic Bookshelf}
}

% Related work
@inproceedings{Manotas:2014:SSE:2568225.2568297,
 author = {Manotas, Irene and Pollock, Lori and Clause, James},
 title = {SEEDS: A Software Engineer's Energy-optimization Decision Support Framework},
 booktitle = {Proceedings of the 36th International Conference on Software Engineering},
 series = {ICSE 2014},
 year = {2014},
 isbn = {978-1-4503-2756-5},
 location = {Hyderabad, India},
 pages = {503--514},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2568225.2568297},
 doi = {10.1145/2568225.2568297},
 acmid = {2568297},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Energy usage, analysis framework, software optimization},
}

@inproceedings{Shacham:2009:CAS:1542476.1542522,
 author = {Shacham, Ohad and Vechev, Martin and Yahav, Eran},
 title = {Chameleon: Adaptive Selection of Collections},
 booktitle = {Proceedings of the 30th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '09},
 year = {2009},
 isbn = {978-1-60558-392-1},
 location = {Dublin, Ireland},
 pages = {408--418},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1542476.1542522},
 doi = {10.1145/1542476.1542522},
 acmid = {1542522},
 publisher = {ACM},
 address = {New York, NY, USA}
}


@misc{story1,
  author = {Patrick Wyatt},
  title = {{Tough times on the road to Starcraft}},
  howpublished = "\url{http://www.codeofhonor.com/blog/tough-times-on-the-road-to-starcraft}",
  year = {2012},
  note = "[Online; accessed 18-February-2017]"
}

@misc{story2,
  author = {Ronald J. Nowling},
  title = {{Gotchas with Scala Mutable Collections and Large Data Sets}},
  howpublished = "\url{http://rnowling.github.io/software/engineering/2015/07/01/gotcha-scala-collections.html}",
  year = {2015},
  note = "[Online; accessed 18-February-2017]"
}

@misc{story3,
  author = {Brett Hardin},
  title = {{Companies with ``hacking'' cultures fail}},
  howpublished = "\url{https://blog.bretthard.in/companies-with-hacking-cultures-fail-b8907a69e3d#.ffdkyb1w2}",
  year = {2016},
  note = "[Online; accessed 25-February-2017]"
}


@article{spark,
  title={Spark: Cluster Computing with Working Sets.},
  author={Zaharia, Matei and Chowdhury, Mosharaf and Franklin, Michael J and Shenker, Scott and Stoica, Ion},
  journal={HotCloud},
  volume={10},
  number={10-10},
  pages={95},
  year={2010}
}

% Genetic improvment algorithms and techniques

@article{nsgaii,
  title={A fast and elitist multiobjective genetic algorithm: NSGA-II},
  author={Deb, Kalyanmoy and Pratap, Amrit and Agarwal, Sameer and Meyarivan, TAMT},
  journal={IEEE transactions on evolutionary computation},
  volume={6},
  number={2},
  pages={182--197},
  year={2002},
  publisher={IEEE}
}

% Books about design patterns

@article{designpattern1,
  title={Design patterns: Elements of reusable object-oriented software},
  author={Vlissides, John and Helm, Richard and Johnson, Ralph and Gamma, Erich},
  journal={Reading: Addison-Wesley},
  volume={49},
  number={120},
  pages={11},
  year={1995}
}

% Abstract Data Type
@book{dale1996abstract,
  title={Abstract data types: specifications, implementations, and applications},
  author={Dale, Nell and Walker, Henry M},
  year={1996},
  publisher={Jones \& Bartlett Learning}
}



% Premature Optimisation quote

@article{Knuth:1974:SPG:356635.356640,
 author = {Knuth, Donald E.},
 title = {Structured Programming with Go to Statements},
 journal = {ACM Comput. Surv.},
 issue_date = {Dec. 1974},
 volume = {6},
 number = {4},
 month = dec,
 year = {1974},
 issn = {0360-0300},
 pages = {261--301},
 numpages = {41},
 url = {http://doi.acm.org/10.1145/356635.356640},
 doi = {10.1145/356635.356640},
 acmid = {356640},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@techreport{kalibera2012quantifying,
  title={Quantifying performance changes with effect size confidence intervals},
  author={Kalibera, Tomas and Jones, Richard},
  year={2012},
  institution={Technical Report 4-12, University of Kent}
}

@inproceedings{Blackburn:2006:DBJ:1167473.1167488,
 author = {Blackburn, Stephen M. and Garner, Robin and Hoffmann, Chris and Khang, Asjad M. and McKinley, Kathryn S. and Bentzur, Rotem and Diwan, Amer and Feinberg, Daniel and Frampton, Daniel and Guyer, Samuel Z. and Hirzel, Martin and Hosking, Antony and Jump, Maria and Lee, Han and Moss, J. Eliot B. and Phansalkar, Aashish and Stefanovi\'{c}, Darko and VanDrunen, Thomas and von Dincklage, Daniel and Wiedermann, Ben},
 title = {The DaCapo Benchmarks: Java Benchmarking Development and Analysis},
 booktitle = {Proceedings of the 21st Annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages, and Applications},
 series = {OOPSLA '06},
 year = {2006},
 isbn = {1-59593-348-4},
 location = {Portland, Oregon, USA},
 pages = {169--190},
 numpages = {22},
 url = {http://doi.acm.org/10.1145/1167473.1167488},
 doi = {10.1145/1167473.1167488},
 acmid = {1167488},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {DaCapo, Java, SPEC, benchmark, methodology},
}


@INPROCEEDINGS{1688440,
author={C. M. Fonseca and L. Paquete and M. Lopez-Ibanez},
booktitle={2006 IEEE International Conference on Evolutionary Computation},
title={An Improved Dimension-Sweep Algorithm for the Hypervolume Indicator},
year={2006},
pages={1157-1163},
keywords={Algorithm design and analysis;Computational geometry;Power measurement},
doi={10.1109/CEC.2006.1688440},
ISSN={1089-778X},
month={July},}


@ARTICLE{1197687,
author={E. Zitzler and L. Thiele and M. Laumanns and C. M. Fonseca and V. G. da Fonseca},
journal={IEEE Transactions on Evolutionary Computation},
title={Performance assessment of multiobjective optimizers: an analysis and review},
year={2003},
volume={7},
number={2},
pages={117-132},
keywords={approximation theory;genetic algorithms;Pareto-optimal set;approximation set;evolutionary algorithms;multiobjective optimization;performance assessment;quality indicator;Algorithm design and analysis;Computer networks;Design engineering;Electronic mail;Evolutionary computation;Helium;Laboratories;Performance analysis;Quality assessment;Space technology},
doi={10.1109/TEVC.2003.810758},
ISSN={1089-778X},
month={April},}

@inproceedings{pareto,
  title={Evolutionary computation and convergence to a pareto front},
  author={Van Veldhuizen, David A and Lamont, Gary B},
  booktitle={Late breaking papers at the genetic programming 1998 conference},
  pages={221--228},
  year={1998}
}



@misc{rq3story1,
  author = {Nati Shalom},
  title = {{Amazon found every 100ms of latency cost them 1\% in sales.}},
  howpublished = "\url{http://blog.gigaspaces.com/amazon-found-every-100ms-of-latency-cost-them-1-in-sales
}",
  year = {2008},
  note = "[Online; accessed 18-February-2017]"
}


@misc{rq3story2,
  author = {Trade News},
  title = {{Five milliseconds delay could cost brokers \$20 million.}},
  howpublished = "\url{http://www.thetradenews.com/Trading-Venues/Exchanges/Five-milliseconds--delay-could-cost-brokers-\$20-million}",
  year = {2008},
  note = "[Online; accessed 18-February-2017]"
}

@misc{rq3story3,
  author = {James Hamilton},
  title = {{The Cost of Latency.}},
  howpublished = "\url{http://perspectives.mvdirona.com/2009/10/the-cost-of-latency/}",
  year = {2009},
  note = "[Online; accessed 18-February-2017]"
}

@misc{wala,
  author = {IBM},
  title = {{T.J. Watson Libraries for Analysis (WALA).}},
  howpublished = "\url{http://wala.sourceforge.net/wiki/index.php/Main_Page}",
  year = {2009},
  note = "[Online; accessed 18-February-2017]"
}




@inproceedings{xu2008precise,
  title={Precise memory leak detection for java software using container profiling},
  author={Xu, Guoqing and Rountev, Atanas},
  booktitle={Software Engineering, 2008. ICSE'08. ACM/IEEE 30th International Conference On},
  pages={151--160},
  year={2008},
  organization={IEEE}
}


@article{xu2009go,
  title={Go with the flow: profiling copies to find runtime bloat},
  author={Xu, Guoqing and Arnold, Matthew and Mitchell, Nick and Rountev, Atanas and Sevitsky, Gary},
  journal={ACM Sigplan Notices},
  volume={44},
  number={6},
  pages={419--430},
  year={2009},
  publisher={ACM}
}


@inproceedings{xu2010detecting,
  title={Detecting inefficiently-used containers to avoid bloat},
  author={Xu, Guoqing and Rountev, Atanas},
  booktitle={ACM Sigplan Notices},
  volume={45},
  pages={160--173},
  year={2010},
  organization={ACM}
}

@inproceedings{bloat1,
  title={Modeling runtime behavior in framework-based applications},
  author={Mitchell, Nick and Sevitsky, Gary and Srinivasan, Harini},
  booktitle={European Conference on Object-Oriented Programming},
  pages={429--451},
  year={2006},
  organization={Springer}
}

@inproceedings{bloat2,
  title={The causes of bloat, the limits of health},
  author={Mitchell, Nick and Sevitsky, Gary},
  booktitle={ACM SIGPLAN Notices},
  volume={42},
  pages={245--260},
  year={2007},
  organization={ACM}
}

@inproceedings{bloat3,
  title={A scalable technique for characterizing the usage of temporaries in framework-intensive Java applications},
  author={Dufour, Bruno and Ryder, Barbara G and Sevitsky, Gary},
  booktitle={Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering},
  pages={59--70},
  year={2008},
  organization={ACM}
}

@article{bloat4,
  title={Jolt: lightweight dynamic analysis and removal of object churn},
  author={Shankar, Ajeet and Arnold, Matthew and Bodik, Rastislav},
  journal={ACM Sigplan Notices},
  volume={43},
  number={10},
  pages={127--142},
  year={2008},
  publisher={ACM}
}

@article{bloat5,
  title={Finding low-utility data structures},
  author={Xu, Guoqing and Mitchell, Nick and Arnold, Matthew and Rountev, Atanas and Schonberg, Edith and Sevitsky, Gary},
  journal={ACM Sigplan Notices},
  volume={45},
  number={6},
  pages={174--186},
  year={2010},
  publisher={ACM}
}

@article{georges2007statistically,
  title={Statistically rigorous java performance evaluation},
  author={Georges, Andy and Buytaert, Dries and Eeckhout, Lieven},
  journal={ACM SIGPLAN Notices},
  volume={42},
  number={10},
  pages={57--76},
  year={2007},
  publisher={ACM}
}

@inproceedings{kalibera2013rigorous,
  title={Rigorous benchmarking in reasonable time},
  author={Kalibera, Tomas and Jones, Richard},
  booktitle={ACM SIGPLAN Notices},
  volume={48},
  pages={63--74},
  year={2013},
  organization={ACM}
}


@article{fay2010wilcoxon,
  title={Wilcoxon-Mann-Whitney or t-test? On assumptions for hypothesis tests and multiple interpretations of decision rules},
  author={Fay, Michael P and Proschan, Michael A},
  journal={Statistics surveys},
  volume={4},
  pages={1},
  year={2010},
  publisher={NIH Public Access}
}

@inproceedings{blackburn2006dacapo,
  title={The DaCapo benchmarks: Java benchmarking development and analysis},
  author={Blackburn, Stephen M and Garner, Robin and Hoffmann, Chris and Khang, Asjad M and McKinley, Kathryn S and Bentzur, Rotem and Diwan, Amer and Feinberg, Daniel and Frampton, Daniel and Guyer, Samuel Z and others},
  booktitle={ACM Sigplan Notices},
  volume={41},
  pages={169--190},
  year={2006},
  organization={ACM}
}


@inproceedings{harman2010source,
  title={Why source code analysis and manipulation will always be important},
  author={Harman, Mark},
  booktitle={Source Code Analysis and Manipulation (SCAM), 2010 10th IEEE Working Conference on},
  pages={7--19},
  year={2010},
  organization={IEEE}
}

@article{kitchenham2002preliminary,
  title={Preliminary guidelines for empirical research in software engineering},
  author={Kitchenham, Barbara A and Pfleeger, Shari Lawrence and Pickard, Lesley M and Jones, Peter W and Hoaglin, David C. and El Emam, Khaled and Rosenberg, Jarrett},
  journal={IEEE Transactions on software engineering},
  volume={28},
  number={8},
  pages={721--734},
  year={2002},
  publisher={IEEE}
}

@inproceedings{Bornat-al:POPL05,
  author    = {Richard Bornat and
               Cristiano Calcagno and
               Peter W. O'Hearn and
               Matthew J. Parkinson},
  crossref  = {POPL:05},
  pages     = {259--270},
  title     = {Permission accounting in separation logic},
  opturl       = {http://doi.acm.org/10.1145/1040305.1040327},
  doi       = {10.1145/1040305.1040327},
}

@article{Brookes:TCS07,
  author    = {Stephen Brookes},
  title     = {A semantics for concurrent separation logic},
  journal   = {Th. Comp. Sci.},
  volume    = {375},
  number    = {1-3},
  year      = {2007},
  opturl = {http://dx.doi.org/10.1016/j.tcs.2006.12.034},
  doi = {10.1016/j.tcs.2006.12.034},
}

@inproceedings{DinsdaleYoung-al:ECOOP10,
  author    = {Thomas Dinsdale-Young and
               Mike Dodds and
               Philippa Gardner and
               Matthew J. Parkinson and
               Viktor Vafeiadis},
  crossref  = {ECOOP:10},
  pages     = {504--528},
  title     = {{Concurrent Abstract Predicates}},
}


@inproceedings{Gotsman-al:ESOP13,
  author    = {Alexey Gotsman and
               Noam Rinetzky and
               Hongseok Yang},
  title     = {Verifying Concurrent Memory Reclamation Algorithms with
               Grace},
  optpages     = {249-269},
  crossref  = {ESOP:13},
}

@inproceedings{Fu-al:CONCUR10,
  author    = {Ming Fu and
               Yong Li and
               Xinyu Feng and
               Zhong Shao and
               Yu Zhang},
  title     = {Reasoning about Optimistic Concurrency Using a Program Logic
               for History},
  optpages     = {388-402},
  crossref  = {CONCUR:10},
}

@inproceedings{Liang-al:POPL12,
  author    = {Hongjin Liang and
               Xinyu Feng and
               Ming Fu},
  title     = {A rely-guarantee-based simulation for verifying concurrent
               program transformations},
  optpages     = {455-468},
  crossref  = {POPL:12},
}

@inproceedings{Liang-Feng:PLDI13,
  author    = {Hongjin Liang and
               Xinyu Feng},
  title     = {Modular verification of linearizability with non-fixed linearization
               points},
  crossref  = {PLDI:13},
  pages     = {459--470},
 doi = {10.1145/2499370.2462189},
}

@inproceedings{Elmas-al:TACAS10,
  author    = {Tayfun Elmas and
               Shaz Qadeer and
               Ali Sezgin and
               Omer Subasi and
               Serdar Tasiran},
  title     = {Simplifying Linearizability Proofs with Reduction and Abstraction},
  crossref  = {TACAS:10},
  optpages  = {296-311},
}

@inproceedings{kalibera2013rigorous,
  title={Rigorous benchmarking in reasonable time},
  author={Kalibera, Tomas and Jones, Richard},
  booktitle={ACM SIGPLAN Notices},
  volume={48},
  number={11},
  pages={63--74},
  year={2013},
  organization={ACM}
}

@inproceedings{Elmas-al:POPL09,
  author    = {Tayfun Elmas and
               Shaz Qadeer and
               Serdar Tasiran},
  title     = {A calculus of atomic actions},
  crossref  = {POPL:09},
  optpages     = {2-15},
}

@inproceedings{Feng-al:ESOP07,
  author    = {Xinyu Feng and
               Rodrigo Ferreira and
               Zhong Shao},
  title     = {On the Relationship Between Concurrent Separation Logic
               and Assume-Guarantee Reasoning},
  crossref   = {ESOP:07},
  pages      = {173--188},
  doi        = {10.1007/978-3-540-71316-6_13}
}

@article{Herlihy-Wing:TOPLAS90,
  author    = {Maurice Herlihy and
               Jeannette M. Wing},
  title     = {Linearizability: A Correctness Condition for Concurrent
               Objects},
  journal   = toplas,
  volume    = {12},
  number    = {3},
  year      = {1990},
 doi = {10.1145/78969.78972},
pages     = {463-492}
}

@article{Jones:TOPLAS83,
  author    = {Cliff B. Jones},
  title     = {Tentative Steps Toward a Development Method for Interfering
               Programs},
  journal   = toplas,
  volume    = {5},
  number    = {4},
  year      = {1983},
 pages     = {596-619},
 doi = {10.1145/69575.69577},
}

@inproceedings{Jones:IFIP83,
  author    = {Cliff B. Jones},
  title     = {Specification and Design of (Parallel) Programs},
  booktitle = {IFIP Congress},
  year      = {1983},
  pages     = {321--332},
}

@techreport{Jones09,
  author    = {Cliff B. Jones},
  title     = {The role of auxiliary variables in the formal development of concurrent programs},
  number    = {CS-TR-1179},
  institution = {University of Newcastle upon Tyne, Computing Science},
  year      = {2009}
}

@techreport{Lucas68,
  author    = {Peter Lucas},
  title     = {Two constructive realizations of the block concept and their equivalence},
  number    = {TR 25.085},
  institution = {IBM Laboratory Vienna},
  year      = {1968}
}

@article{OHearn:TCS07,
  author    = {Peter W. O'Hearn},
  title     = {Resources, concurrency, and local reasoning},
  journal   = {Th. Comp. Sci.},
  volume    = {375},
  number    = {1-3},
  year      = {2007},
  pages = {271--307},
  doi = {10.1016/j.tcs.2006.12.035},
}

@inproceedings{OHearn-al:PODC10,
  author    = {Peter W. O'Hearn and
               Noam Rinetzky and
               Martin T. Vechev and
               Eran Yahav and
               Greta Yorsh},
  title     = {Verifying linearizability with hindsight},
  crossref  = {PODC:10}
}
@Comment{pages     = {85-94}}

@InProceedings{Calcagno-al:LICS07,
  author =       {Cristiano Calcagno and Peter W. O'Hearn and Hongseok Yang},
  title =        {Local Action and Abstract Separation Logic},
  booktitle = {LICS},
  year = {2007}
}
@Comment{pages =        {366--368}}

@article{Owicki-Gries:CACM76,
  author    = {Susan S. Owicki and
               David Gries},
  title     = {Verifying Properties of Parallel Programs: An Axiomatic
               Approach},
  journal   = {Commun. ACM},
  volume    = {19},
  number    = {5},
  year      = {1976},
  pages = {279--285},
  doi = {10.1145/360051.360224},
}


@inproceedings{Reynolds:LICS02,
  author    = {John C. Reynolds},
  title     = {{Separation Logic: A Logic for Shared Mutable Data
                  Structures}},
  crossref  = {LICS:02},
  pages     = {55--74},
  doi       = {10.1109/LICS.2002.1029817},
}


@inproceedings{Reynolds:FSTTCS04,
  author    = {John C. Reynolds},
  title     = {Toward a Grainless Semantics for Shared-Variable Concurrency},
  optpages     = {35-48},
  crossref  = {FSTTCS:04},
}

@inproceedings{Jacobs-Piessens:POPL11,
  author    = {Bart Jacobs and
               Frank Piessens},
  title     = {Expressive modular fine-grained concurrency specification},
  crossref  = {POPL:11},
  pages     = {271-282},
  doi = {10.1145/1925844.1926417},
}

@inproceedings{Vafeiadis-al:PPOPP06,
  author    = {Viktor Vafeiadis and
               Maurice Herlihy and
               Tony Hoare and
               Marc Shapiro},
  title     = {Proving correctness of highly-concurrent linearisable objects},
  crossref  = {PPOPP:06},
  optpages     = {129-136},
}
@Comment{pages     = {129-136}}

@inproceedings{Vafeiadis-Parkinson:CONCUR07,
  author    = {Viktor Vafeiadis and
               Matthew J. Parkinson},
  title     = {A Marriage of Rely/Guarantee and Separation Logic},
  crossref  = {CONCUR:07},
  pages     = {256-271},
  opturl       = {http://dx.doi.org/10.1007/978-3-540-74407-8_18},
  doi       = {10.1007/978-3-540-74407-8_18},
}

@inproceedings{Krishnaswami-al:ICFP12,
  author    = {Neelakantan R. Krishnaswami and
               Aaron Turon and
               Derek Dreyer and
               Deepak Garg},
  title     = {Superficially substructural types},
  optpages     = {41-54},
  crossref  = {ICFP:12},
}

@phdthesis{Vafeiadis:PhD,
title = {Modular fine-grained concurrency verification},
author = {Viktor Vafeiadis},
school = {University of Cambridge},
year = {2007},
}

@inproceedings{Nanevski-al:POPL10,
  author    = {Aleksandar Nanevski and
               Viktor Vafeiadis and
               Josh Berdine},
  title     = {Structuring the verification of heap-manipulating programs},
  pages     = {261--274},
  crossref = {POPL:10},
  opturl       = {http://doi.acm.org/10.1145/1706299.1706331},
  optdoi       = {10.1145/1706299.1706331},
}

@article{Filipovic-al:TCS10,
  author    = {Ivana Filipovic and
               Peter W. O'Hearn and
               Noam Rinetzky and
               Hongseok Yang},
  title     = {Abstraction for concurrent objects},
  journal   = {Theor. Comput. Sci.},
  volume    = {411},
  number    = {51-52},
  year      = {2010},
  pages     = {4379--4398}
}

@InProceedings{Nanevski-al:ICFP08,
  author =       {Aleksandar Nanevski and Greg Morrisett and Avi Shinnar and Paul Govereau and Lars Birkedal},
  title =        {{Ynot}: Dependent Types for Imperative Programs},
  crossref = {ICFP:08},
  pages = {229--240},
  opturl       = {http://doi.acm.org/10.1145/1411204.1411237},
  doi       = {10.1145/1411204.1411237},
}

@inproceedings{LeyWild-Nanevski:POPL13,
  author    = {Ruy Ley-Wild and
               Aleksandar Nanevski},
  title     = {Subjective auxiliary state for coarse-grained concurrency},
  crossref  = {POPL:13},
  pages     = {561--574},
  opturl       = {http://doi.acm.org/10.1145/2429069.2429134},
  doi       = {10.1145/2429069.2429134},
}

@Misc{rlw+nan:scsl12,
  author = 	 {Ruy Ley-Wild and Aleksandar Nanevski},
  title = 	 {Subjective Concurrent Separation Logic},
  howpublished = {http://software.imdea.org/\~{}aleks/papers/concur/scsl.pdf},
  month = 	 {January},
  year = 	 {2012}
}

@article{Lipton-CACM75,
  author    = {Richard J. Lipton},
  title     = {Reduction: A Method of Proving Properties of Parallel Programs},
  journal   = {Commun. ACM},
  volume    = {18},
  number    = {12},
  year      = {1975},
  optpages     = {717-721},
}

@Comment original occurrences of auxiliary state:

@Comment Per Brinch Hansen
@Comment Concurrent Programming Concepts
@Comment ACM Computing Surveys 5(4) (1973)

@Comment H. C. Lauer
@Comment Correctness in operating systems
@Comment Ph.D. Th., Carnegie-Mellon U., 1973.

@article{Brady-Hammond:FI10,
  author    = {Edwin Brady and
               Kevin Hammond},
  title     = {Correct-by-Construction Concurrency: Using Dependent Types
               to Verify Implementations of Effectful Resource Usage Protocols},
  journal   = {Fundam. Inform.},
  volume    = {102},
  number    = {2},
  year      = {2010},
  pages     = {145--176},
}

@inproceedings{Nanevski-al:ESOP14,
  author    = {Aleksandar Nanevski and
               Ruy Ley-Wild and
               Ilya Sergey and
               Germ{\'a}n Andr{\'e}s Delbianco},
  title     = {Communicating State Transition Systems for Fine-Grained
               Concurrent Resources},
  pages     = {290--310},
  crossref = {ESOP:14},
  note     = {Extended version is available from \url{http://software.imdea.org/fcsl/papers/concurroids-extended.pdf}},
  optdoi       = {10.1007/978-3-642-54833-8_16},
}

@misc{Nanevski-al:ESOP14TR,
  author    = {Aleksandar Nanevski and
               Ruy Ley-Wild and
               Ilya Sergey and
               Germ{\'a}n Andr{\'e}s Delbianco},
  title     = {{Communicating State Transition Systems for Fine-Grained
               Concurrent Resources. Extended Version.}},
  year = {2014},
  note =  {Available at \url{http://software.imdea.org/fcsl/papers/concurroids-extended.pdf}},
}


@InProceedings{Birkedal-Yang:07,
  title =        "Relational Parametricity and Separation Logic",
  author =       "Lars Birkedal and Hongseok Yang",
  year =         2007,
  booktitle =    "{FOSSACS'07}",
  volume =       4423,
  series =       "LNCS"
}

@Misc{scsl-coqscripts,
  author = 	 {Ruy Ley-Wild and Aleksandar Nanevski},
  title = 	 {{Supporting Material}},
  howpublished = {https://software.imdea.org/\~{}aleks/scsl/},
  month = 	 {July},
  year = 	 {2012}
}

@Misc{fcsl-coqscripts,
  author = 	 {Aleksandar Nanevski and Ruy Ley-Wild and Ilya Sergey
                  and Germ\'{a}n Andr\'{e}s Delbianco},
  title = 	 {{Supporting Material}},
  howpublished = {\\ \url{http://software.imdea.org/~aleks/fcsl/}}
}

@inproceedings{Greenberg-al:POPL10,
  author    = {Michael Greenberg and
               Benjamin C. Pierce and
               Stephanie Weirich},
  title     = {Contracts made manifest},
  crossref  = {POPL:10},
  optpages     = {353-364},
}

@inproceedings{MartinLof71,
author = {Per Martin-L\"of},
title = {Haupstatz for the intuitionistic theory of iterated inductive definitions},
booktitle = {Scandinavian Logic Symposium},
year = {1971},
}

@article{Dybjer97,
    author = {Peter Dybjer},
    title = {Inductive Families},
    journal = {Formal Aspects of Computing},
    year = {1997},
    volume = {6}
}%    pages = {440--465}

@inproceedings{Nanevski-al:ICFP06,
  author    = {Aleksandar Nanevski and
               Greg Morrisett and
               Lars Birkedal},
  title     = {{Polymorphism and separation in Hoare Type Theory}},
  crossref  = {ICFP:06},
  pages     = {62--73},
  opturl       = {http://doi.acm.org/10.1145/1159803.1159812},
  doi       = {10.1145/1159803.1159812},
}

@inproceedings{Leroy:POPL94,
  author    = {Xavier Leroy},
  title     = {Manifest Types, Modules, and Separate Compilation},
  crossref = {POPL:94},
  optpages     = {109-122},
}

@phdthesis{Owicki75,
  author    = {Susan S. Owicki},
  title     = {Axiomatic Proof Techniques for Parallel Programs},
  year      = {1975},
  school = {Cornell University}
}

@inproceedings{Nieto03,
  author    = {Leonor Prensa Nieto},
  title     = {The Rely-Guarantee Method in Isabelle/HOL},
  booktitle = {ESOP},
  year      = {2003}
}

@article{Kleymann:FAC99,
  author    = {Thomas Kleymann},
  title     = {Hoare Logic and Auxiliary Variables},
  journal   = {Formal Asp. Comput.},
  volume    = {11},
  number    = {5},
  year      = {1999}
}

@inproceedings{Svendsen-al:ESOP13,
  author    = {Kasper Svendsen and
               Lars Birkedal and
               Matthew J. Parkinson},
  pages     = {169--188},
  title     = {Modular Reasoning about Separation of Concurrent Data Structures},
  crossref  = {ESOP:13}
}

@inproceedings{Colvin-al:CAV06,
  author    = {Robert Colvin and
               Lindsay Groves and
               Victor Luchangco and
               Mark Moir},
  title     = {{Formal Verification of a Lazy Concurrent List-Based Set
               Algorithm}},
  optpages     = {475-488},
  crossref  = {CAV:06},
}

@inproceedings{Svendsen-Birkedal:ESOP14,
  author    = {Kasper Svendsen and
               Lars Birkedal},
  title     = {{Impredicative Concurrent Abstract Predicates}},
  pages     = {149-168},
  crossref  = {ESOP:14},
  doi       = {10.1007/978-3-642-54833-8_9},
}

@inproceedings{Feng:POPL09,
  author    = {Xinyu Feng},
  title     = {Local rely-guarantee reasoning},
  pages     = {315--327},
  crossref  = {POPL:09},
  opturl = {http://doi.acm.org/10.1145/1594834.1480922},
  doi = {10.1145/1594834.1480922},
}

@book{Herlihy-Shavit:08,
  author    = {Maurice Herlihy and
               Nir Shavit},
  title     = {The art of multiprocessor programming},
  publisher = {M. Kaufmann},
  year      = {2008},
}

@inproceedings{Hendler-al:SPAA10,
  author    = {Danny Hendler and
               Itai Incze and
               Nir Shavit and
               Moran Tzafrir},
  title     = {Flat combining and the synchronization-parallelism tradeoff},
  crossref  = {SPAA:10},
  pages     = {355--364},
  opturl = {http://doi.acm.org/10.1145/1810479.1810540},
  doi = {10.1145/1810479.1810540},
}

@inproceedings{Gotsman-Yang:CONCUR12,
  author    = {Alexey Gotsman and
               Hongseok Yang},
  title     = {{Linearizability with ownership transfer}},
  pages     = {256-271},
  crossref  = {CONCUR:12},
  opturl       = {http://dx.doi.org/10.1007/978-3-642-32940-1_19},
  doi       = {10.1007/978-3-642-32940-1_19},
}

@inproceedings{ArrozPincho-al:ECOOP14,
  author    = {Pedro da Rocha Pinto and
               Thomas Dinsdale-Young and
               Philippa Gardner},
  title     = {{TaDA: A Logic for Time and Data Abstraction}},
  crossref  = {ECOOP:14},
  pages     = {207--231},
  opturl       = {http://dx.doi.org/10.1007/978-3-662-44202-9_9},
  doi       = {10.1007/978-3-662-44202-9_9},
}



@inproceedings{Cerone-al:ICALP14,
  author    = {Andrea Cerone and
               Alexey Gotsman and
               Hongseok Yang},
  title     = {{Parameterised linearisability}},
  crossref  = {ICALP:14},
  pages     = {98-109},
  opturl       = {http://dx.doi.org/10.1007/978-3-662-43951-7_9},
  doi       = {10.1007/978-3-662-43951-7_9},
}


@techreport{Treiber:TR,
   author = {R. Kent Treiber},
   title  = {Systems programming: coping with parallelism},
   institution = {IBM Almaden Research Center},
   number    = {RJ 5118},
   year = {1986},
}

@techreport{Qadeer-al:TR09,
   author = {Shaz Qadeer and
             Ali Sezgin and
             Serdar Tasiran},
   title  = {Back and Forth: Prophecy Variables for Static
                  Verification of Concurrent Programs},
   institution = {Microsoft Research},
   number    = {MSR-TR-2009-142},
   year = {2009},
}

@inproceedings{Harris-al:DISC02,
 author = {Harris, Timothy L. and Fraser, Keir and Pratt, Ian A.},
 title = {A Practical Multi-word Compare-and-Swap Operation},
 optpages = {265--279},
 crossref = {DISC:02},
}

@inproceedings{Turon-al:POPL13,
  author    = {Aaron Joseph Turon and
               Jacob Thamsborg and
               Amal Ahmed and
               Lars Birkedal and
               Derek Dreyer},
  title     = {Logical relations for fine-grained concurrency},
  optpages     = {343-356},
  crossref  = {POPL:13},
}

@inproceedings{Turon-Wand:POPL11,
 author    = {Aaron Joseph Turon and
               Mitchell Wand},
  title     = {A separation logic for refining concurrent objects},
  optpages     = {247-258},
  crossref  = {POPL:11},
}


@Manual{Coq-manual,
        Author = {{Coq Development Team}},
        key = {Coq},
        title = {{The Coq Proof Assistant Reference Manual - Version V8.4}},
        year = {2014},
        note = {\url{http://coq.inria.fr/}}
}

@inproceedings{Turon-al:ICFP13,
  author    = {Aaron Turon and
               Derek Dreyer and
               Lars Birkedal},
  title     = {Unifying refinement and {H}oare-style reasoning in a logic
               for higher-order concurrency},
  pages     = {377--390},
  crossref  = {ICFP:13},
 doi = {10.1145/2544174.2500600},
}

@inproceedings{DinsdaleYoung-al:POPL13,
  author    = {Thomas Dinsdale-Young and
               Lars Birkedal and
               Philippa Gardner and
               Matthew J. Parkinson and
               Hongseok Yang},
  crossref  = {POPL:13},
  title     = {Views: compositional reasoning for concurrent programs},
  pages = {287--300},
  opturl       = {http://doi.acm.org/10.1145/2429069.2429104},
  doi       = {10.1145/2429069.2429104},
}

@inproceedings{Prensa:ESOP03,
  author    = {Leonor Prensa Nieto},
  title     = {{The Rely-Guarantee Method in Isabelle/HOL}},
  booktitle = {ESOP 2003},
}

@inproceedings{Jensen-Birkedal:ESOP12,
  author    = {Jonas Braband Jensen and
               Lars Birkedal},
  title     = {{Fictional Separation Logic}},
  optpages     = {377-396},
  crossref  = {ESOP:12},
}

@article{Michael:TPDS04,
  author    = {Maged M. Michael},
  title     = {Hazard Pointers: Safe Memory Reclamation for Lock-Free Objects},
  journal   = {IEEE Trans. Parallel Distrib. Syst.},
  volume    = {15},
  number    = {6},
  year      = {2004},
  optpages     = {491-504},
}


@inproceedings{Zhang-al:TAMC12,
  author    = {Zipeng Zhang and
               Xinyu Feng and
               Ming Fu and
               Zhong Shao and
               Yong Li},
  title     = {A Structural Approach to Prophecy Variables},
  optpages     = {61-71},
  crossref  = {TAMC:12},
}

@inproceedings{Burckhardt-al:PLDI10,
  author    = {Sebastian Burckhardt and
               Chris Dern and
               Madanlal Musuvathi and
               Roy Tan},
  title     = {Line-up: a complete and automatic linearizability checker},
  pages     = {330--340},
  crossref  = {PLDI:10},
}

@inproceedings{Chlipala:PLDI11,
  author    = {Adam Chlipala},
  title     = {Mostly-automated verification of low-level programs in computational
               separation logic},
  pages     = {234-245},
  crossref  = {PLDI:11},
  opturl       = {http://doi.acm.org/10.1145/1993498.1993526},
  doi       = {10.1145/1993498.1993526},
}

@inproceedings{Jacobs-al:NFM11,
  author    = {Bart Jacobs and
               Jan Smans and
               Pieter Philippaerts and
               Fr{\'{e}}d{\'{e}}ric Vogels and
               Willem Penninckx and
               Frank Piessens},
  title     = {{VeriFast: {A} Powerful, Sound, Predictable, Fast Verifier for {C}
               and Java}},
  pages     = {41--55},
  doi       = {10.1007/978-3-642-20398-5_4},
  crossref  = {NFM:11}
}

@inproceedings{Pfenning-Paulin-Mohring:MFPS89,
  author    = {Frank Pfenning and
               Christine Paulin{-}Mohring},
  title     = {Inductively Defined Types in the Calculus of Constructions},
  pages     = {209--228},
  crossref  = {MFPS:89}
}

@article{Coquand-Huet:IC88,
  author    = {Thierry Coquand and
               G{\'e}rard P. Huet},
  title     = {The Calculus of Constructions},
  journal   = {Information and Computation},
  volume    = {76},
  number    = {2/3},
  year      = {1988},
  pages     = {95-120},
}

@techreport{Gonthier-al:TR,
   author = {Georges Gonthier and
             Assia Mahboubi and
             Enrico Tassi},
   title  = {{A Small Scale Reflection Extension for the Coq system}},
   institution = {Microsoft Research -- Inria Joint Centre},
   number    = {6455},
   year = {2009}
}

@incollection{Jones:TR09,
  author = {Cliff B. {Jones}},
  title  = {The role of auxiliary variables in the formal development of concurrent programs},
  booktitle = {Reflections on the Work of C.A.R. Hoare},
  doi = {10.1007/978-1-84882-912-1_8},
  pages = {167--187},
  publisher  = {Springer London},
  year = 2010
}

@inproceedings{Leino-Muller:ESOP09,
  author    = {K. Rustan M. Leino and
               Peter M{\"{u}}ller},
  title     = {A Basis for Verifying Multi-threaded Programs},
  pages     = {378--393},
  crossref  = {ESOP:09},
  doi       = {10.1007/978-3-642-00590-9_27},
}

@inproceedings{Zee-al:PLDI08,
  author    = {Karen Zee and
               Viktor Kuncak and
               Martin C. Rinard},
  title     = {Full functional verification of linked data structures},
  pages     = {349--361},
  crossref  = {PLDI:08},
}

@phdthesis{Vogels:PhD,
	author = {Vogels, Fr\'ed\'eric},
	title = {Formalisation and Soundness of Static Verification Algorithms for Imperative Programs},
	year = {2012},
	month = {December},
	school = {KU Leuven},
}

@techreport{Jacobs-al:sharedboxes,
	author = {Smans, Jan and Vanoverberghe, Dries and Devriese, Dominique and Jacobs, Bart and Piessens, Frank},
	title = {Shared boxes: {R}ely-{G}uarantee reasoning in {VeriFast}},
	year = {2014},
	month = {May},
	number = {CW662},
	institution = {KU Leuven},
	type = {CW Reports},
}

@unpublished{Raad-al:colosl,
        author = {Azalea Raad and
                  Jules Villard and
                  Philippa Gardner},
        month  = {April},
        year   = {2014},
        title  = {{CoLoSL: Concurrent Local Subjective Logic}},
        note   = {Presented at York Concurrency Workshop}}

@inproceedings{Sergey-al:ESOP15,
        author = {Ilya Sergey and
                  Aleksandar Nanevski and
                  Anindya Banerjee},
        crossref = {ESOP:15},
        title  = {Specifying and Verifying Concurrent Algorithms with Histories and Subjectivity},
  note     = {Extended version is available from \url{http://software.imdea.org/fcsl/papers/histories-extended.pdf}}
}


@inproceedings{Vafeiadis:VMCAI10,
  author    = {Viktor Vafeiadis},
  title     = {{RGSep Action Inference}},
  pages     = {345--361},
  crossref  = {VMCAI:10},
  doi       = {10.1007/978-3-642-11319-2_25},
}

@inproceedings{Calcagno-al:SAS07,
  author    = {Cristiano Calcagno and
               Matthew J. Parkinson and
               Viktor Vafeiadis},
  title     = {Modular Safety Checking for Fine-Grained Concurrency},
  pages     = {233--248},
  crossref  = {SAS:07},
  opturl       = {http://dx.doi.org/10.1007/978-3-540-74061-2_15},
  doi       = {10.1007/978-3-540-74061-2_15},
}

@inproceedings{Hobor-Villard:POPL13,
  author    = {Aquinas Hobor and
               Jules Villard},
  title     = {The ramifications of sharing in data structures},
  pages     = {523--536},
  crossref  = {POPL:13},
  doi = {10.1145/2429069.2429131},
}

@inproceedings{Garillot-al:TPHOL09,
  author    = {Fran\c{c}ois Garillot and
               Georges Gonthier and
               Assia Mahboubi and
               Laurence Rideau},
  title     = {Packaging Mathematical Structures},
  pages     = {327-342},
  crossref  = {TPHOL:09},
  opturl       = {http://dx.doi.org/10.1007/978-3-642-03359-9_23},
  doi       = {10.1007/978-3-642-03359-9_23},
}

@inproceedings{Mahboubi-Tassi:ITP13,
  author    = {Assia Mahboubi and
               Enrico Tassi},
  title     = {Canonical Structures for the Working {C}oq User},
  pages     = {19-34},
  crossref  = {ITP:13},
  opturl       = {http://dx.doi.org/10.1007/978-3-642-39634-2_5},
  doi       = {10.1007/978-3-642-39634-2_5},
}

@inproceedings{Wickerson-al:ESOP10,
  author    = {John Wickerson and
               Mike Dodds and
               Matthew J. Parkinson},
  title     = {Explicit Stabilisation for Modular Rely-Guarantee Reasoning},
  pages     = {610--629},
  crossref  = {ESOP:10},
  opturl       = {http://dx.doi.org/10.1007/978-3-642-11957-6_32},
  doi       = {10.1007/978-3-642-11957-6_32},
}

@inproceedings{Sozeau:TYPES06,
  author    = {Matthieu Sozeau},
  title     = {{Subset coercions in Coq}},
  pages     = {237-252},
  crossref  = {TYPES:06},
  doi       = {10.1007/978-3-540-74464-1_16},
}

@inproceedings{Leino-al:FOSAD09,
  author    = {K. Rustan M. Leino and
               Peter M{\"{u}}ller and
               Jan Smans},
  title     = {{Verification of Concurrent Programs with Chalice}},
  pages     = {195--222},
  doi       = {10.1007/978-3-642-03829-7_7},
  crossref  = {FOSAD:09}
}

@inproceedings{Blom-Huisman:FM14,
  author    = {Stefan Blom and
               Marieke Huisman},
  title     = {{The VerCors Tool for Verification of Concurrent Programs}},
  pages     = {127--131},
  crossref  = {FM:14},
}

@inproceedings{Cohen-al:TPHOL09,
  author    = {Ernie Cohen and
               Markus Dahlweid and
               Mark A. Hillebrand and
               Dirk Leinenbach and
               Michal Moskal and
               Thomas Santen and
               Wolfram Schulte and
               Stephan Tobies},
  title     = {{VCC:} {A} Practical System for Verifying Concurrent {C}},
  pages     = {23--42},
  crossref  = {TPHOL:09},
  doi = {10.1007/978-3-642-03359-9_2},
}

@inproceedings{Sozeau-Tabareau:ITP14,
  author    = {Matthieu Sozeau and
               Nicolas Tabareau},
  title     = {{Universe polymorphism in Coq}},
  pages     = {499--514},
  crossref  = {ITP:14},
  doi       = {10.1007/978-3-319-08970-6_32},
}

@inproceedings{Gonthier-al:ICFP11,
  author    = {Georges Gonthier and
               Beta Ziliani and
               Aleksandar Nanevski and
               Derek Dreyer},
  title     = {How to make ad hoc proof automation less ad hoc},
  pages     = {163--175},
  crossref  = {ICFP:11},
  opturl       = {http://doi.acm.org/10.1145/2034773.2034798},
  doi       = {10.1145/2034773.2034798},
}

@inproceedings{Ziliani-al:ICFP13,
  author    = {Beta Ziliani and
               Derek Dreyer and
               Neelakantan R. Krishnaswami and
               Aleksandar Nanevski and
               Viktor Vafeiadis},
  title     = {Mtac: a monad for typed tactic programming in {C}oq},
  pages     = {87--100},
  crossref  = {ICFP:13},
}

@article{Dijkstra:CACM75,
 author = {Dijkstra, Edsger W.},
 title = {Guarded Commands, Nondeterminacy and Formal Derivation of Programs},
 journal = {Commun. ACM},
 issue_date = {1975},
 volume = {18},
 number = {8},
 month = aug,
 year = {1975},
 pages = {453--457},
  opturl       = {http://doi.acm.org/10.1145/360933.360975},
  doi       = {10.1145/360933.360975},
}

@inproceedings{Smans-al:ECOOP09,
  author    = {Jan Smans and
               Bart Jacobs and
               Frank Piessens},
  title     = {{Implicit Dynamic Frames: Combining Dynamic Frames and Separation Logic}},
  pages     = {148--172},
  crossref  = {ECOOP:09},
  doi       = {10.1007/978-3-642-03013-0_8},
}


@inproceedings{Chlipala-al:ICFP09,
  author    = {Adam Chlipala and
               J. Gregory Malecha and
               Greg Morrisett and
               Avraham Shinnar and
               Ryan Wisnesky},
  title     = {Effective interactive proofs for higher-order imperative programs},
  pages     = {79--90},
  crossref  = {ICFP:09},
  opturl       = {http://doi.acm.org/10.1145/1596550.1596565},
  doi       = {10.1145/1596550.1596565},
}

@inproceedings{Feng-Shao:ICFP05,
  author    = {Xinyu Feng and
               Zhong Shao},
  title     = {Modular verification of concurrent assembly code with dynamic thread
               creation and termination},
  pages     = {254--267},
  crossref  = {ICFP:05},
}

@inproceedings{Feng-al:PLDI08,
  author    = {Xinyu Feng and
               Zhong Shao and
               Yuan Dong and
               Yu Guo},
  title     = {Certifying low-level programs with hardware interrupts and preemptive
               threads},
  pages     = {PLDI:08},
}

@inproceedings{Ni-Shao:POPL06,
  author    = {Zhaozhong Ni and
               Zhong Shao},
  title     = {Certified assembly programming with embedded code pointers},
  pages     = {320--333},
  crossref  = {POPL:06},
}

@phdthesis{Gordon:PhD,
title = {Verifying Concurrent Programs by Controlling Alias Interference},
author = {Colin S. Gordon},
school = {University of Washington},
year = {2014},
}


@inproceedings{Letouzey:CIE08,
  author    = {Pierre Letouzey},
  title     = {{Extraction in Coq: An Overview}},
  pages     = {359--369},
  crossref  = {CIE:08},
  doi       = {10.1007/978-3-540-69407-6_39},
}

@Book{Bertot-Casteran:BOOK,
	Author = {Bertot, Yves and Cast\'{e}ran, Pierre},
	Title = {{Interactive Theorem Proving and Program Development. Coq'Art: The Calculus of Inductive Constructions}},
        Series = {{Texts in Theoretical Computer Science}},
	Publisher = {Springer Verlag},
	Year = {2004},
        isbn = {978-3-662-07964-5},
        doi  = {10.1007/978-3-662-07964-5}
}


@article{Shao:CACM10,
  author    = {Zhong Shao},
  title     = {Certified software},
  journal   = {Commun. {ACM}},
  year      = {2010},
  volume    = {53},
  number    = {12},
  pages     = {56--66},
  opturl       = {http://doi.acm.org/10.1145/1859204.1859226},
  doi       = {10.1145/1859204.1859226},
}

@inproceedings{Leroy:POPL06,
  author    = {Xavier Leroy},
  title     = {Formal certification of a compiler back-end or: programming a compiler
               with a proof assistant},
  pages     = {42--54},
  crossref  = {POPL:06},
  opturl       = {http://doi.acm.org/10.1145/1111037.1111042},
  doi       = {10.1145/1111037.1111042},
}

@Book{Appel-al:BOOK14,
	Author = {Andrew W. Appel and
                  Robert Dockins and
                  Aquinas Hobor and
                  Lennart Beringer and
                  Josiah Dodds and
                  Gordon Stewart and
                  Sandrine Blazy and
                  Xavier Leroy},
	Title = {{Program Logics for Certified Compilers}},
	Publisher = {Cambridge University Press},
	Year = {2014},
        isbn = {9781107256552},
        doi = {10.1017/CBO9781107256552}
}

@inproceedings{Jensen-al:POPL13,
  author    = {Jonas Braband Jensen and
               Nick Benton and
               Andrew Kennedy},
  title     = {High-level separation logic for low-level code},
  year      = {2013},
  pages     = {301--314},
  crossref  = {POPL:13},
  opturl       = {http://doi.acm.org/10.1145/2429069.2429105},
  doi       = {10.1145/2429069.2429105},
}

@Book{Chlipala:BOOK,
	Author = {Adam Chlipala},
	Title = {{Certified Programming with Dependent Types}},
	Publisher = {The MIT Press},
	Year = {2013},
        url = {http://adam.chlipala.net/cpdt},
        isbn = {9780262026659}
}

@inproceedings{Banerjee-al:ECOOP08,
  author    = {Anindya Banerjee and
               David A. Naumann and
               Stan Rosenberg},
  title     = {Regional Logic for Local Reasoning about Global Invariants},
  pages     = {387--411},
  crossref  = {ECOOP:08},
  doi       = {10.1007/978-3-540-70592-5_17}
}

@Comment The following reference is given by Reynolds in the
@Comment "Craft of programming" book, page 306, wrt. auxiliary variable.
@techreport{Lucas:TR,
  author = {Peter Lucas},
  title = {Two constructive realizations of the block concept and their equivalence},
  number = {25.085},
  institution = {IBM Laboratory Vienna},
  year = {1968}}

@book{Sergey:PnP,
  author = {Ilya Sergey},
  title = {{Programs and Proofs: Mechanizing Mathematics with
                  Dependent Types}},
  year = {2014},
  publisher = {Lecture notes with exercises. Available at \url{http://ilyasergey.net/pnp}},
  optnote = {Available at \url{http://ilyasergey.net/pnp}},
}

@inproceedings{Sergey-al:PLDI15,
  author    = {Ilya Sergey and
               Aleksandar Nanevski and
               Anindya Banerjee},
  title     = {Mechanized Verification of Fine-grained Concurrent Programs},
  crossref  = {PLDI:15},
  pages      = {77-87},
  optnote      = {Available from \url{http://software.imdea.org/fcsl/papers/fcsl-pldi15.pdf}}}

@article{Sergey-al:OOPSLA16,
  author    = {Ilya Sergey and
               Aleksandar Nanevski and
               Anindya Banerjee and
               Germ{\'{a}}n Andr{\'{e}}s Delbianco},
  title     = {Hoare-style Specifications as Correctness Conditions
                  for Non-linearizable Concurrent Objects},
  journal   = {CoRR},
  volume    = {abs/1509.06220},
  year      = {2015},
  note       = {\url{http://arxiv.org/abs/1509.06220}},
}

@misc{Wood:YP15,
  author = {Gavin Wood},
  title = {{Ethereum: A Secure Decentralised Generalised Transaction
                  Ledger.  Homestead Revision}},
  year = {2015}
}

@article{Luu-al:CCS16,
  author    = {Loi Luu and
               Duc{-}Hiep Chu and
               Hrishi Olickel and
               Prateek Saxena and
               Aquinas Hobor},
  title     = {Making Smart Contracts Smarter},
  journal   = {{IACR} Cryptology ePrint Archive},
  volume    = {2016},
  pages     = {633},
  year      = {2016},
}

@inproceedings{marino2016setting,
  title={Setting standards for altering and undoing smart contracts},
  author={Marino, Bill and Juels, Ari},
  booktitle={International Symposium on Rules and Rule Markup Languages for the Semantic Web},
  pages={151--166},
  year={2016},
  organization={Springer}
}

@techreport{atzei2016survey,
  title={A survey of attacks on Ethereum smart contracts},
  author={Atzei, Nicola and Bartoletti, Massimo and Cimoli, Tiziana}
}


@article{example-citation,
    abstract = {{We describe a set of best practices for scientific software development, based on research and experience, that will improve scientists' productivity and the reliability of their software.}},
    author = {Anne Author},
    doi = {10.xxxx/example.example.0001},
    journal = {Journal of Classic Examples},
    keywords = {stuff},
    month = jan,
    number = {1},
    pages = {e1001745+},
    pmcid = {PMC3886731},
    pmid = {24415924},
    posted-at = {1970-01-01 00:00:01},
    publisher = {Public Library of Science},
    title = {{Example Journal Paper Title}},
    url = {http://dx.doi.org/10.xxx/example.example.0001},
    volume = {1},
    year = {1970}
}

@article{MMO1,
title = "The {TXL} source transformation language ",
journal = "Science of Computer Programming ",
volume = "61",
number = "3",
pages = "190 - 210",
year = "2006",
note = "Special Issue on The Fourth Workshop on Language Descriptions, Tools, and Applications (LDTA ’04) ",
issn = "0167-6423",
doi = "http://dx.doi.org/10.1016/j.scico.2006.04.002",
url = "http://www.sciencedirect.com/science/article/pii/S0167642306000669",
author = "James R. Cordy",
keywords = "Source transformation",
keywords = "Functional programming",
keywords = "Term rewriting",
keywords = "Grammars ",
abstract = "\{TXL\} is a special-purpose programming language designed for creating, manipulating and rapidly prototyping language descriptions, tools and applications. \{TXL\} is designed to allow explicit programmer control over the interpretation, application, order and backtracking of both parsing and rewriting rules. Using first order functional programming at the higher level and term rewriting at the lower level, \{TXL\} provides for flexible programming of traversals, guards, scope of application and parameterized context. This flexibility has allowed \{TXL\} users to express and experiment with both new ideas in parsing, such as robust, island and agile parsing, and new paradigms in rewriting, such as \{XML\} mark-up, rewriting strategies and contextualized rules, without any change to \{TXL\} itself. This paper outlines the history, evolution and concepts of \{TXL\} with emphasis on its distinctive style and philosophy, and gives examples of its use in expressing and applying recent new paradigms in language processing. "
}

@incollection{MMO2,
year={2001},
isbn={978-1-4419-4888-5},
booktitle={Mutation Testing for the New Century},
volume={24},
series={The Springer International Series on Advances in Database Systems},
editor={Wong, W.Eric},
doi={10.1007/978-1-4757-5939-6_7},
title={Mutation 2000: Uniting the Orthogonal},
url={http://dx.doi.org/10.1007/978-1-4757-5939-6{\_}7},
publisher={Springer US},
author={Offutt, A.Jefferson and Untch, RolandH.},
pages={34-44}
}

@ARTICLE{MMO3,
author={Howden, W.E.},
journal={Software Engineering, IEEE Transactions on},
title={Weak Mutation Testing and Completeness of Test Sets},
year={1982},
month={July},
volume={SE-8},
number={4},
pages={371-379},
abstract={Different approaches to the generation of test data are described. Error-based approaches depend on the definition of classes of commonly occurring program errors. They generate tests which are specifically designed to determine if particular classes of errors occur in a program. An error-based method called weak mutation testing is described. In this method, tests are constructed which are guaranteed to force program statements which contain certain classes of errors to act incorrectly during the execution of the program over those tests. The method is systematic, and a tool can be built to help the user apply the method. It is extensible in the sense that it can be extended to cover additional classes of errors. Its relationship to other software testing methods is discussed. Examples are included.},
keywords={Complete;effective;mutations;testing;Computer errors;Genetic mutations;Guidelines;Indexing;Programming profession;Software engineering;Software testing;System testing;Complete;effective;mutations;testing},
doi={10.1109/TSE.1982.235571},
ISSN={0098-5589},}

@ARTICLE{MMO4,
author={Yue Jia and Harman, M.},
journal={Software Engineering, IEEE Transactions on},
title={An Analysis and Survey of the Development of Mutation Testing},
year={2011},
month={Sept},
volume={37},
number={5},
pages={649-678},
abstract={Mutation Testing is a fault-based software testing technique that has been widely studied for over three decades. The literature on Mutation Testing has contributed a set of approaches, tools, developments, and empirical results. This paper provides a comprehensive analysis and survey of Mutation Testing. The paper also presents the results of several development trend analyses. These analyses provide evidence that Mutation Testing techniques and tools are reaching a state of maturity and applicability, while the topic of Mutation Testing itself is the subject of increasing interest.},
keywords={fault diagnosis;program testing;comprehensive analysis;development trend analysis;empirical results;fault-based software testing technique;mutation testing development;mutation testing technique;mutation testing tool;Automata;Books;Computer languages;Educational institutions;Fault detection;Genetic mutations;History;Java;Programming profession;Software testing;Mutation testing;survey.},
doi={10.1109/TSE.2010.62},
ISSN={0098-5589},}

@inproceedings{MMO5,
 author = {Nethercote, Nicholas and Seward, Julian},
 title = {Valgrind: A Framework for Heavyweight Dynamic Binary Instrumentation},
 booktitle = {Proceedings of the 2007 ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '07},
 year = {2007},
 isbn = {978-1-59593-633-2},
 location = {San Diego, California, USA},
 pages = {89--100},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1250734.1250746},
 doi = {10.1145/1250734.1250746},
 acmid = {1250746},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Memcheck, Valgrind, dynamic binary analysis, dynamic binary instrumentation, shadow values},
}

@INPROCEEDINGS{MMO6,
author={Shahriar, H. and Zulkernine, M.},
booktitle={Computer Software and Applications, 2008. COMPSAC '08. 32nd Annual IEEE International},
title={Mutation-Based Testing of Buffer Overflow Vulnerabilities},
year={2008},
month={July},
pages={979-984},
abstract={Buffer overflow (BOF) is one of the major vulnerabilities that leads to non-secure software. Testing an implementation for BOF vulnerabilities is challenging as the underlying reasons of buffer overflow vary widely. Moreover, the existing vulnerability testing approaches do not address the issue of generating adequate test data sets for testing BOF vulnerabilities. In this work, we apply the idea of mutation-based testing technique to generate adequate test data set for BOF vulnerabilities. Our work addresses those BOF vulnerabilities, which are related to an implementation language and its associated libraries. We apply the concept for ANSI C language and its associated libraries. We propose 12 mutation operators to force the generation of adequate test data set for BOF vulnerabilities. The proposed operators are validated by using four open source programs. The results indicate that the proposed operators are effective for testing BOF vulnerabilities.},
keywords={buffer storage;program testing;public domain software;ANSI C language;buffer overflow vulnerabilities;mutation-based testing;open source programs;vulnerability testing;ANSI standards;Application software;Buffer overflow;Computer applications;Genetic mutations;Monitoring;Performance evaluation;Runtime;Software libraries;Software testing;Buffer overflow;Mutation-based testing;Vulnerabilities},
doi={10.1109/COMPSAC.2008.123},
ISSN={0730-3157},}

@article{MMO7,
title = "Higher Order Mutation Testing ",
journal = "Information and Software Technology ",
volume = "51",
number = "10",
pages = "1379 - 1393",
year = "2009",
note = "Source Code Analysis and Manipulation, {SCAM} 2008 ",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2009.04.016",
url = "http://www.sciencedirect.com/science/article/pii/S0950584909000688",
author = "Yue Jia and Mark Harman",
keywords = "Mutation Testing",
keywords = "Higher order mutant",
keywords = "Search techniques ",
abstract = "This paper introduces a new paradigm for Mutation Testing, which we call Higher Order Mutation Testing (HOM Testing). Traditional Mutation Testing considers only first order mutants, created by the injection of a single fault. Often these first order mutants denote trivial faults that are easily killed. Higher order mutants are created by the insertion of two or more faults. The paper introduces the concept of a subsuming HOM; one that is harder to kill than the first order mutants from which it is constructed. By definition, subsuming \{HOMs\} denote subtle fault combinations. The paper reports the results of an empirical study of \{HOM\} Testing using 10 programs, including several non-trivial real-world subjects for which test suites are available. "
}

@INPROCEEDINGS{MMO8,
author={Papadakis, M. and Malevris, N.},
booktitle={Software Testing, Verification, and Validation Workshops (ICSTW), 2010 Third International Conference on},
title={An Empirical Evaluation of the First and Second Order Mutation Testing Strategies},
year={2010},
month={April},
pages={90-99},
abstract={Various mutation approximation techniques have been proposed in the literature in order to reduce the expenses of mutation. This paper presents results from an empirical study conducted for first and second order mutation testing strategies. Its scope is to evaluate the relative application cost and effectiveness of the different mutation strategies. The application cost was based: on the number of mutants, the equivalent ones and on the number of test cases needed to expose them by each strategy. Each strategy's effectiveness was evaluated by its ability to expose a set of seeded faults. The results indicate that on the one hand the first order mutation testing strategies can be in general more effective than the second order ones. On the other hand, the second order strategies can drastically decrease the number of the introduced equivalent mutants, generally forming a valid cost effective alternative to mutation testing.},
keywords={program testing;first order mutation testing strategy;mutation approximation technique;second order mutation testing strategy;Application software;Costs;Fault detection;Genetic mutations;Informatics;Sampling methods;Software measurement;Software quality;Software testing;Vehicles;higher order mutation;mutation testing},
doi={10.1109/ICSTW.2010.50},}

@article{MMO9,
  title={Hints on test data selection: Help for the practicing programmer},
  author={DeMillo, Richard A and Lipton, Richard J and Sayward, Frederick G},
  journal={Computer},
  volume={11},
  number={4},
  pages={34--41},
  year={1978},
  publisher={IEEE Comput. Soc.}
}

@inproceedings{MMO10,
 author = {Budd, Timothy A. and DeMillo, Richard A. and Lipton, Richard J. and Sayward, Frederick G.},
 title = {Theoretical and Empirical Studies on Using Program Mutation to Test the Functional Correctness of Programs},
 booktitle = {Proceedings of the 7th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '80},
 year = {1980},
 isbn = {0-89791-011-7},
 location = {Las Vegas, Nevada},
 pages = {220--233},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/567446.567468},
 doi = {10.1145/567446.567468},
 acmid = {567468},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{MMO15,
year={1982},
issn={0001-5903},
journal={Acta Informatica},
volume={18},
number={1},
doi={10.1007/BF00625279},
title={Two notions of correctness and their relation to testing},
url={http://dx.doi.org/10.1007/BF00625279},
publisher={Springer-Verlag},
author={Budd, TimothyA. and Angluin, Dana},
pages={31-45},
language={English}
}

﻿@article {MMO16,
author = {Offutt, A. Jefferson and Craft, W. Michael},
title = {Using compiler optimization techniques to detect equivalent mutants},
journal = {Software Testing, Verification and Reliability},
volume = {4},
number = {3},
publisher = {John Wiley & Sons, Ltd},
issn = {1099-1689},
url = {http://dx.doi.org/10.1002/stvr.4370040303},
doi = {10.1002/stvr.4370040303},
pages = {131--154},
keywords = {Compiler optimizations, Software testing, Mutation testing, Experimental software engineering},
year = {1994},
abstract = {Mutation analysis is a software testing technique that requires the tester to generate test data that will find specific, well-defined errors. Mutation testing executes many slightly differing versions, called mutants, of the same program to evaluate the quality of the data used to test the program. Although these mutants are generated and executed efficiently by automated methods, many of the mutants are functionally equivalent to the original program and are not useful for testing. Recognizing and eliminating equivalent mutants is currently done by hand, a time-consuming and arduous task. This problem is currently a major obstacle to the practical application of mutation testing.This paper presents extensions to previous work in detecting equivalent mutants; specifically, algorithms for determining several classes of equivalent mutants are presented, an implementation of these algorithms is discussed, and results from using this implementation are presented. These algorithms are based on data flow analysis and six compiler optimization techniques. Each of these techniques is described together with how they are used to detect equivalent mutants. The design of the tool and some experimental results using it are also presented.},
}

﻿@article {MMO17,
author = {Offutt, A. Jefferson and Pan, Jie},
title = {Automatically detecting equivalent mutants and infeasible paths},
journal = {Software Testing, Verification and Reliability},
volume = {7},
number = {3},
publisher = {John Wiley & Sons, Ltd},
issn = {1099-1689},
url = {http://dx.doi.org/10.1002/(SICI)1099-1689(199709)7:3$<$165::AID-STVR143$>$3.0.CO;2-U},
doi = {10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U},
pages = {165--192},
keywords = {software testing, mutation testing, constraints, feasible path analysis},
year = {1997},
abstract = {Mutation testing is a technique for testing software units that has great potential for improving the quality of testing, and thereby increasing the ability to assure the high reliability of critical software. It will be shown that recent advances in mutation research have brought a practical mutation testing system closer to reality. One recent advance is a partial solution to the problem of automatically detecting equivalent mutant programs. Equivalent mutants are currently detected by hand, which makes it very expensive and time-consuming. The problem of detecting equivalent mutants is a specific instance of a more general problem, commonly called the feasible path problem, which says that for certain structural testing criteria some of the test requirements are infeasible in the sense that the semantics of the program imply that no test case satisfies the test requirements. Equivalent mutants, unreachable statements in path testing techniques, and infeasible DU-pairs in data flow testing are all instances of the feasible path problem. This paper presents a technique that uses mathematical constraints, originally developed for test data generation, to detect some equivalent mutants and infeasible paths automatically. © 1997 John Wiley & Sons, Ltd.},
}

@incollection{MMO18,
year={2004},
isbn={978-3-540-22343-6},
booktitle={Genetic and Evolutionary Computation – GECCO 2004},
volume={3103},
series={Lecture Notes in Computer Science},
editor={Deb, Kalyanmoy},
doi={10.1007/978-3-540-24855-2_155},
title={How to Overcome the Equivalent Mutant Problem and Achieve Tailored Selective Mutation Using Co-evolution},
url={http://dx.doi.org/10.1007/978-3-540-24855-2{\_}155},
publisher={Springer Berlin Heidelberg},
author={Adamopoulos, Konstantinos and Harman, Mark and Hierons, RobertM.},
pages={1338-1349},
language={English}
}

@book{MMO19,
  title={Tutorial: software testing \& validation techniques},
  author={Miller, Edward and Howden, William E},
  volume={138},
  year={1978},
  publisher={IEEE Computer Society}
}

@techreport{MMO20,
  title={On Mutation.},
  author={Acree Jr, Allen Troy},
  year={1980},
  institution={DTIC Document}
}

@phdthesis{MMO21,
 author = {Budd, Timothy Alan},
 title = {Mutation Analysis of Program Test Data},
 year = {1980},
 note = {AAI8025191},
 school = {Yale University},
 address = {New Haven, CT, USA},
}

@inproceedings{MMO22,
 author = {Harrold, Mary Jean and Rothermel, Gregg},
 title = {Performing Data Flow Testing on Classes},
 booktitle = {Proceedings of the 2Nd ACM SIGSOFT Symposium on Foundations of Software Engineering},
 series = {SIGSOFT '94},
 year = {1994},
 isbn = {0-89791-691-3},
 location = {New Orleans, Louisiana, USA},
 pages = {154--163},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/193173.195402},
 doi = {10.1145/193173.195402},
 acmid = {195402},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{MMO23,
 author = {Harrold, Mary Jean and Soffa, Mary Lou},
 title = {Interprocedual Data Flow Testing},
 booktitle = {Proceedings of the ACM SIGSOFT '89 Third Symposium on Software Testing, Analysis, and Verification},
 series = {TAV3},
 year = {1989},
 isbn = {0-89791-342-6},
 location = {Key West, Florida, USA},
 pages = {158--167},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/75308.75327},
 doi = {10.1145/75308.75327},
 acmid = {75327},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{MMO24,
title = "Coverage testing of Java programs and components ",
journal = "Science of Computer Programming ",
volume = "56",
number = "1–2",
pages = "211 - 230",
year = "2005",
note = "New Software Composition Concepts ",
issn = "0167-6423",
doi = "http://dx.doi.org/10.1016/j.scico.2004.11.013",
url = "http://www.sciencedirect.com/science/article/pii/S0167642304001856",
author = "A.M.R. Vincenzi and J.C. Maldonado and W.E. Wong and M.E. Delamaro",
keywords = "Java program testing",
keywords = "Java component testing",
keywords = "Java bytecode",
keywords = "Structural testing",
keywords = "Control-flow testing",
keywords = "Data-flow testing ",
abstract = "Although software testing is a crucial activity in the software development process, only recently have more sound and consistent testing tools become available for testing Java programs and their components. These tools support mostly functional and control-flow based structural criteria. In this paper we explore control-flow and data-flow based coverage criteria to support the testing of Java programs and/or components. We also describe a testing tool, named JaBUTi, which can be used by both the component developer and the component user to test Java-based components and/or systems. To achieve this goal, the tool works at the bytecode level such that no source code is required during the testing activity. We illustrate these ideas and concepts with an example extracted from the literature. "
}

@ARTICLE{MMO25,
author={Rapps, S. and Weyuker, E.J.},
journal={Software Engineering, IEEE Transactions on},
title={Selecting Software Test Data Using Data Flow Information},
year={1985},
month={April},
volume={SE-11},
number={4},
pages={367-375},
abstract={This paper defines a family of program test data selection criteria derived from data flow analysis techniques similar to those used in compiler optimization. It is argued that currently used path selection criteria, which examine only the control flow of a program, are inadequate quate. Our procedure associates with each point in a program at which a variable is defined, those points at which the value is used. Several test data selection criteria, differing in the type and number of these associations, are defined and compared.},
keywords={Data flow;program testing;test data selection;Computer science;Data analysis;Error correction;Information analysis;Intelligent systems;Optimizing compilers;Program processors;Software testing;System testing;Data flow;program testing;test data selection},
doi={10.1109/TSE.1985.232226},
ISSN={0098-5589},}

@article{MMO27,
title = "On the relationship between two control-flow coverage criteria: all JJ-paths and \{MCDC\} ",
journal = "Information and Software Technology ",
volume = "48",
number = "7",
pages = "433 - 440",
year = "2006",
note = "",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2005.05.003",
url = "http://www.sciencedirect.com/science/article/pii/S0950584905000807",
author = "Martin R. Woodward and Michael A. Hennell",
keywords = "Software testing",
keywords = "Control-flow coverage criteria",
keywords = "All JJ-paths",
keywords = "\{MCDC\} ",
abstract = "Coverage criteria may be used to assess the adequacy of software test data. Improved test data, that takes account of any inadequacies identified by lack of coverage, may then be developed. It is natural to seek ways of comparing different criteria and the ‘subsumes’ relationship is one such way: one criterion subsumes another, if satisfying the first always implies satisfaction of the second. This paper considers two criteria: ‘all jump-to-jump paths’ (all JJ-paths) and ‘modified condition/decision coverage’ (MCDC). It might be anticipated that there would be a relationship between these criteria since both are based on advanced control-flow concepts. \{MCDC\} has particular importance since it is involved in the DO-178B standard for avionics software. However, it is shown that ‘all JJ-paths’ and \{MCDC\} are, in general, incomparable, but for programs written under certain specific constraints ‘all JJ-paths’ subsumes MCDC. "
}

@article{MMO29,
  title={Vulnerability testing of software system using fault injection},
  author={Du, Wenliang and Mathur, Aditya P},
  journal={Purdue University, West Lafayette, Indiana, Technique Report COAST TR},
  pages={98--02},
  year={1998}
}

@INPROCEEDINGS{MMO30,
author={Harman, M. and Yue Jia and Langdon, W.B.},
booktitle={Software Testing, Verification, and Validation Workshops (ICSTW), 2010 Third International Conference on},
title={A Manifesto for Higher Order Mutation Testing},
year={2010},
month={April},
pages={80-89},
abstract={We argue that higher order mutants are potentially better able to simulate real faults and to reveal insights into bugs than the restricted class of first order mutants. The Mutation Testing community has previously shied away from Higher Order Mutation Testing believing it to be too expensive and therefore impractical. However, this paper argues that Search Based Software Engineering can provide a solution to this apparent problem, citing results from recent work on search based optimization techniques for constructing higher order mutants. We also present a research agenda for the development of Higher Order Mutation Testing.},
keywords={optimisation;program testing;search problems;software engineering;higher order mutation testing;real faults;search based optimization technique;search based software engineering;Computer bugs;Educational institutions;Fault detection;Genetic mutations;Helium;Software engineering;Software testing;Higher Order Mutation Testing},
doi={10.1109/ICSTW.2010.13},}

@TECHREPORT{MMO31,
    author = {Hiralal Agrawal Richard and Richard A. Demillo and Bob Hathaway and William Hsu and Wynne Hsu and E. W. Krauser and R. J. Martin and Aditya P. Mathur and Eugene H. Spafford},
    title = {Design Of Mutant Operators For The C Programming Language},
    institution = {},
    year = {1989}
}

@article{MMO32,
 author = {Babu, P. Arun and Kumar, C. Senthil and Murali, N. and Jayakumar, T.},
 title = {An Intuitive Approach to Determine Test Adequacy in Safety-critical Software},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {September 2012},
 volume = {37},
 number = {5},
 month = sep,
 year = {2012},
 issn = {0163-5948},
 pages = {1--10},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2347696.2347701},
 doi = {10.1145/2347696.2347701},
 acmid = {2347701},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {equivalent mutant, higher order mutation, mutation testing, safety critical software, test adequacy},
}

@inproceedings{MMO33,
 author = {Tsankov, Petar and Dashti, Mohammad Torabi and Basin, David},
 title = {Semi-valid Input Coverage for Fuzz Testing},
 booktitle = {Proceedings of the 2013 International Symposium on Software Testing and Analysis},
 series = {ISSTA 2013},
 year = {2013},
 isbn = {978-1-4503-2159-4},
 location = {Lugano, Switzerland},
 pages = {56--66},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2483760.2483787},
 doi = {10.1145/2483760.2483787},
 acmid = {2483787},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {coverage criteria, fuzz testing, security testing},
}

@INPROCEEDINGS{MMO34,
author={Tsankov, P. and Wei Jin and Orso, A. and Sinha, S.},
booktitle={Software Testing, Verification and Validation (ICST), 2011 IEEE Fourth International Conference on},
title={Execution Hijacking: Improving Dynamic Analysis by Flying off Course},
year={2011},
month={March},
pages={200-209},
abstract={Typically, dynamic-analysis techniques operate on a small subset of all possible program behaviors, which limits their effectiveness and the representativeness of the computed results. To address this issue, a new paradigm is emerging: execution hijacking, consisting of techniques that explore a larger set of program behaviors by forcing executions along specific paths. Although hijacked executions are infeasible for the given inputs, they can still produce feasible behaviors that could be observed under other inputs. In such cases, execution hijacking can improve the effectiveness of dynamic analysis without requiring the (expensive) generation of additional inputs. To evaluate the usefulness of execution hijacking, we defined, implemented, and evaluated several variants of it. Specifically, we performed an empirical study where we assessed whether execution hijacking could improve the effectiveness of a common dynamic analysis: memory error detection. The results of the study show that execution hijacking, if suitably performed, can indeed improve dynamic analysis.},
keywords={program diagnostics;dynamic analysis;execution hijacking;memory error detection;program behavior;Filtering;Force;Instruments;Monitoring;Performance analysis;Prototypes;Runtime},
doi={10.1109/ICST.2011.45},}

@article{MMO35,
  title={Callgrind: A Call-Graph Generating Cache and Branch Prediction Profiler},
  author={Developers, Valgrind},
  journal={accessed October},
  volume={27},
  year={2010}
}

@article{MMO36,
  title={Probability-Based Parameter Selection for Black-Box Fuzz Testing},
  author={Householder, Allen D and Foote, Jonathan M},
  year={2012}
}

@incollection{MMO37,
year={2013},
isbn={978-3-642-40786-4},
booktitle={Runtime Verification},
volume={8174},
series={Lecture Notes in Computer Science},
editor={Legay, Axel and Bensalem, Saddek},
doi={10.1007/978-3-642-40787-1{\_}10},
title={An Optimized Memory Monitoring for Runtime Assertion Checking of {C} Programs},
url={http://dx.doi.org/10.1007/978-3-642-40787-1{\_}10},
publisher={Springer Berlin Heidelberg},
keywords={runtime assertion checking; memory monitoring; executable specification; invalid pointers; memory-related errors; Frama-C; e-acsl},
author={Kosmatov, Nikolai and Petiot, Guillaume and Signoles, Julien},
pages={167-182},
language={English}
}

@phdthesis{MMO38,
  title={Detecting buffer overflows using testcase synthesis and code instrumentation},
  author={Zhivich, Michael A},
  year={2005},
  school={Massachusetts Institute of Technology}
}

@inproceedings{MMO39,
 author = {Bashir, Muhammad Bilal and Nadeem, Aamer},
 title = {Control Oriented Mutation Testing for Detection of Potential Software Bugs},
 booktitle = {Proceedings of the 2012 10th International Conference on Frontiers of Information Technology},
 series = {FIT '12},
 year = {2012},
 isbn = {978-0-7695-4927-9},
 pages = {35--40},
 numpages = {6},
 url = {http://dx.doi.org/10.1109/FIT.2012.15},
 doi = {10.1109/FIT.2012.15},
 acmid = {2470541},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {mutation testing, equivalent mutant, control flow, mutation score},
}

@article{MMO40,
  title={Testing for security vulnerabilities in software},
  author={Vilela, P and Machado, M and Wong, WE},
  journal={Software Engineering and Applications},
  year={2002}
}

@INPROCEEDINGS{MMO41,
author={Ghosh, A.K. and O'Connor, T. and McGraw, Gary},
booktitle={Security and Privacy, 1998. Proceedings. 1998 IEEE Symposium on},
title={An automated approach for identifying potential vulnerabilities in software},
year={1998},
month={May},
pages={104-114},
abstract={The paper presents results from analyzing the vulnerability of security-critical software applications to malicious threats and anomalous events using an automated fault injection analysis approach. The work is based on the well understood premise that a large proportion of security violations result from errors in software source code and configuration. The methodology employs software fault injection to force anomalous program states during the execution of software and observes their corresponding effects on system security. If insecure behaviour is detected, the perturbed location that resulted in the violation is isolated for further analysis and possibly retrofitting with fault tolerant mechanisms},
keywords={safety-critical software;security of data;software fault tolerance;system monitoring;anomalous events;anomalous program states;automated approach;automated fault injection analysis approach;fault tolerant mechanisms;insecure behaviour detection;malicious threats;perturbed location;potential software vulnerabilities;security violations;security-critical software applications;software fault injection;software source code;system security;Application software;Capability maturity model;Computer security;Performance analysis;Protocols;Software debugging;Software performance;Software quality;Software testing;Software tools},
doi={10.1109/SECPRI.1998.674827},
ISSN={1081-6011},}

@inproceedings{MMO42,
 author = {Offutt, A.},
 title = {The Coupling Effect: Fact or Fiction},
 booktitle = {Proceedings of the ACM SIGSOFT '89 Third Symposium on Software Testing, Analysis, and Verification},
 series = {TAV3},
 year = {1989},
 isbn = {0-89791-342-6},
 location = {Key West, Florida, USA},
 pages = {131--140},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/75308.75324},
 doi = {10.1145/75308.75324},
 acmid = {75324},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{MMO43,
 author = {Offutt, A. Jefferson},
 title = {Investigations of the Software Testing Coupling Effect},
 journal = {ACM Trans. Softw. Eng. Methodol.},
 issue_date = {Jan. 1992},
 volume = {1},
 number = {1},
 month = jan,
 year = {1992},
 issn = {1049-331X},
 pages = {5--20},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/125489.125473},
 doi = {10.1145/125489.125473},
 acmid = {125473},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {fault-based testing, mutation, software testing, unit testing},
}

@INPROCEEDINGS{MMO44,
author={Dan, H. and Hierons, R.M.},
booktitle={Software Testing, Verification and Validation (ICST), 2012 IEEE Fifth International Conference on},
title={{SMT-C}: A Semantic Mutation Testing Tools for {C}},
year={2012},
month={April},
pages={654-663},
abstract={Semantic Mutation Testing (SMT) is a technique that aims to capture errors caused by possible misunderstandings of the semantics of a description language. It is intended to target a class of errors which is different from those captured by traditional Mutation Testing (MT). This paper describes our experiences in the development of an SMT tool for the C programming language: SMT-C. In addition to implementing the essential requirements of SMT (generating semantic mutants and running SMT analysis) we also aimed to achieve the following goals: weak MT/SMT for C, good portability between different configurations, seamless integration into test routines of programming with C and an easy to use front-end.},
keywords={C language;program testing;C programming language;SMT analysis;SMT-C;description language;semantic mutants;semantic mutation testing tools;Computer languages;Grammar;Indexes;Optimization;Semantics;Software;Testing;Eclipse plugin;Mutation operator;Semantic mutation testing;Unit test;Weak mutation testing},
doi={10.1109/ICST.2012.155},}

@INPROCEEDINGS{MMO45,
author={Roy, C.K. and Cordy, J.R.},
booktitle={Software Testing, Verification and Validation Workshops, 2009. ICSTW '09. International Conference on},
title={A Mutation/Injection-Based Automatic Framework for Evaluating Code Clone Detection Tools},
year={2009},
month={April},
pages={157-166},
abstract={In recent years many methods and tools for software clone detection have been proposed. While some work has been done on assessing and comparing performance of these tools, very little empirical evaluation has been done. In particular, accuracy measures such as precision and recall have only been roughly estimated, due both to problems in creating a validated clone benchmark against which tools can be compared, and to the manual effort required to hand check large numbers of candidate clones. In this paper we propose an automated method for empirically evaluating clone detection tools that leverages mutation-based techniques to overcome these limitations by automatically synthesizing large numbers of known clones based on an editing theory of clone creation. Our framework is effective in measuring recall and precision of clone detection tools for various types of fine-grained clones in real systems without manual intervention.},
keywords={software tools;code clone detection tools;fine-grained clones;mutation-based techniques;mutation-injection-based automatic framework;software clone detection;Cloning;Conferences;Genetic mutations;Humans;Infrared detectors;Particle measurements;Software systems;Software testing;Software tools;Time measurement;clone detection;empirical evaluation;mutation},
doi={10.1109/ICSTW.2009.18},}

@incollection{MMO46,
year={2010},
isbn={978-3-642-15584-0},
booktitle={Testing – Practice and Research Techniques},
volume={6303},
series={Lecture Notes in Computer Science},
editor={Bottaci, Leonardo and Fraser, Gordon},
doi={10.1007/978-3-642-15585-7_10},
title={Linguistic Security Testing for Text Communication Protocols},
url={http://dx.doi.org/10.1007/978-3-642-15585-7{\_}10},
publisher={Springer Berlin Heidelberg},
keywords={security testing; mutation testing; text-based communication protocol},
author={Kam, BenW.Y. and Dean, ThomasR.},
pages={104-117},
language={English}
}

@INPROCEEDINGS{MMO47,
author={Bradbury, J.S. and Cordy, J.R. and Dingel, J.},
booktitle={Mutation Analysis, 2006. Second Workshop on},
title={ExMAn: A Generic and Customizable Framework for Experimental Mutation Analysis},
year={2006},
month={Nov},
pages={4-4},
abstract={Current mutation analysis tools are primarily used to compare different test suites and are tied to a particular programming language. In this paper we present the ExMAn experimental mutation analysis framework - ExMAn is automated, general and flexible and allows for the comparison of different quality assurance techniques such as testing, model checking, and static analysis. The goal of ExMAn is to allow for automatic mutation analysis that can be reproduced by other researchers. After describing ExMAn, we present a scenario of using ExMAn to compare testing with static analysis of temporal logic properties. We also provide both the benefits and the current limitations of using our framework.},
keywords={program debugging;program testing;ExMAn;experimental mutation analysis framework;model checking;programming language;static analysis;Automatic testing;Computer bugs;Computer languages;Councils;Genetic mutations;Hybrid power systems;Java;Logic testing;Quality assurance;Sequential analysis},
doi={10.1109/MUTATION.2006.5},}

@incollection{MMO48,
year={2012},
isbn={978-3-642-28037-5},
booktitle={Advances in Software Engineering Techniques},
volume={7054},
series={Lecture Notes in Computer Science},
editor={Szmuc, Tomasz and Szpyrka, Marcin and Zendulka, Jaroslav},
doi={10.1007/978-3-642-28038-2_18},
title={Object-Oriented Testing Capabilities and Performance Evaluation of the {C}{\#} Mutation System},
url={http://dx.doi.org/10.1007/978-3-642-28038-2{\_}18},
publisher={Springer Berlin Heidelberg},
keywords={mutation testing; object-oriented mutation operators; C#; system evolution},
author={Derezińska, Anna and Szustek, Anna},
pages={229-242},
language={English}
}

@inproceedings{MMO49,
 author = {Zhang, Songtao and Dean, Thomas and Knight, Scott},
 title = {A Lightweight Approach to State Based Security Testing},
 booktitle = {Proceedings of the 2006 Conference of the Center for Advanced Studies on Collaborative Research},
 series = {CASCON '06},
 year = {2006},
 location = {Toronto, Ontario, Canada},
 articleno = {28},
 url = {http://dx.doi.org/10.1145/1188966.1189004},
 doi = {10.1145/1188966.1189004},
 acmid = {1189004},
 publisher = {IBM Corp.},
 address = {Riverton, NJ, USA},
}

@INPROCEEDINGS{MMO50,
author={Kusano, M. and Chao Wang},
booktitle={Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on},
title={{CC}mutator: A mutation generator for concurrency constructs in multithreaded {C}/{C}++ applications},
year={2013},
month={Nov},
pages={722-725},
abstract={We introduce CCmutator, a mutation generation tool for multithreaded C/C++ programs written using POSIX threads and the recently standardized C++11 concurrency constructs. CCmutator is capable of performing partial mutations and generating higher order mutants, which allow for more focused and complex combinations of elementary mutation operators leading to higher quality mutants. We have implemented CCmutator based on the popular Clang/LLVM compiler framework, which allows CCmutator to be extremely scalable and robust in handling real-world C/C++ applications. CCmutator is also designed in such a way that all mutants of the same order can be generated in parallel, which allows the tool to be easily parallelized on commodity multicore hardware to improve performance.},
keywords={C++ language;multi-threading;multiprocessing programs;program compilers;program testing;software performance evaluation;CCmutator;Clang-LLVM compiler framework;POSIX threads;commodity multicore hardware;elementary mutation operators;higher order mutant generation;multithreaded C applications;multithreaded C++ applications;mutation generation tool;partial mutations;performance improvement;software development process;software testing;standardized C++11 concurrency constructs;Computer bugs;Concurrent computing;Instruction sets;Java;Software testing;Synchronization},
doi={10.1109/ASE.2013.6693142},}

@inproceedings{MMO51,
 author = {Ma, Yu-Seung and Offutt, Jeff and Kwon, Yong-Rae},
 title = {Mu{J}ava: A Mutation System for Java},
 booktitle = {Proceedings of the 28th International Conference on Software Engineering},
 series = {ICSE '06},
 year = {2006},
 isbn = {1-59593-375-1},
 location = {Shanghai, China},
 pages = {827--830},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/1134285.1134425},
 doi = {10.1145/1134285.1134425},
 acmid = {1134425},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {java, mutation system, mutation testing},
}

@incollection{MMO52,
year={2012},
isbn={978-3-642-31758-3},
booktitle={Model Checking Software},
volume={7385},
series={Lecture Notes in Computer Science},
editor={Donaldson, Alastair and Parker, David},
doi={10.1007/978-3-642-31759-0_17},
title={{FA}u{ST}: A Framework for Formal Verification, Automated Debugging, and Software Test Generation},
url={http://dx.doi.org/10.1007/978-3-642-31759-0{\_}17},
publisher={Springer Berlin Heidelberg},
keywords={Formal verification; Debugging; SAT},
author={Riener, Heinz and Fey, Görschwin},
pages={234-240},
language={English}
}

@misc{MMO55,
  title={{CWE/SANS} Top 25 most dangerous software errors},
  author={Christey, Steve and Brown, M and Kirby, D and Martin, B and Paller, A},
  journal={2011-06-29]. http..//cwe, mitre, org/top25/: CWE-79},
  year={2011},
  note = {http://cwe.mitre.org/top25}
}

@article{MMO56,
  title={An Analysis of the Relationship between Information Squeeziness and Failed Error Propagation in Software Testing},
  author={Androutsopoulos, Kelly and Clark, David and Dan, Haitao and Hierons, Robert M and Harman, Mark},
  journal={RN},
  volume={13},
  pages={18},
  year={2013}
}

@misc{MMO11,
  title={Advanced Doug Lea's malloc exploits},
  author={jp},
  journal={Phrack Magazine},
  volume={61},
  year={2003},
  url={http://phrack.org/issues/61/6.html}
}

@misc{MMO12,
  title={Malloc Des-Maleficarum},
  author={blackngel},
  journal={Phrack Magazine},
  volume={66},
  year={2009},
  url={http://phrack.org/issues/66/10.html}
}

@misc{MMO13,
  title={Vudo malloc tricks},
  author={MaXX},
  journal={Phrack Magazine},
  volume={57},
  year={2001},
  url={http://phrack.org/issues/57/8.html}
}

@INPROCEEDINGS{4670308,
author={Yue Jia and Harman, M.},
booktitle={Practice and Research Techniques, 2008. TAIC PART '08. Testing: Academic Industrial Conference},
title={{MILU}: A Customizable, Runtime-Optimized Higher Order Mutation Testing Tool for the Full {C} Language},
year={2008},
pages={94-98},
abstract={This paper introduces MILU, a C mutation testing tool designed for both first order and higher order mutation testing. All previous mutation testing tools apply all possible mutation operators to the program under test. By contrast, MILU allows customization of the set of mutation operators to be applied. To reduce runtime cost, MILU uses a novel 'test harness' technique to embed mutants and their associated test sets into a single-invocation procedure.},
keywords={C language;program testing;software tools;C language;MiLu;mutation operator;runtime-optimized higher order mutation testing tool;single-invocation procedure;test harness technique;Animals;Costs;Educational institutions;Genetic mutations;Horses;Runtime;Testing;MILU;mutation testing tool},
doi={10.1109/TAIC-PART.2008.18},}

@inproceedings{Xu:2005:ADR:1102120.1102151,
 author = {Xu, Jun and Ning, Peng and Kil, Chongkyung and Zhai, Yan and Bookholt, Chris},
 title = {Automatic Diagnosis and Response to Memory Corruption Vulnerabilities},
 booktitle = {Proceedings of the 12th ACM Conference on Computer and Communications Security},
 series = {CCS '05},
 year = {2005},
 isbn = {1-59593-226-7},
 location = {Alexandria, VA, USA},
 pages = {223--234},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1102120.1102151},
 doi = {10.1145/1102120.1102151},
 acmid = {1102151},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {attack diagnosis, memory corruption attack, message filtering, randomization},
}

@INPROCEEDINGS{1377218,
author={Rinard, M. and Cadar, C. and Dumitran, D. and Roy, D.M. and Leu, T.},
booktitle={Computer Security Applications Conference, 2004. 20th Annual},
title={A dynamic technique for eliminating buffer overflow vulnerabilities (and other memory errors)},
year={2004},
month={Dec},
pages={82-90},
keywords={buffer storage;data structures;program compilers;program verification;security of data;storage allocation;Web sites;buffer overflow vulnerability elimination;data structures;hash table;memory errors;open source servers;program compilers;programming errors;Artificial intelligence;Buffer overflow;Computer errors;Computer languages;Computer science;Data structures;Dynamic compiler;Java;Laboratories;Programming profession},
doi={10.1109/CSAC.2004.2},
ISSN={1063-9527},}

@inproceedings{Sezer:2007:MAD:1315245.1315314,
 author = {Sezer, Emre C. and Ning, Peng and Kil, Chongkyung and Xu, Jun},
 title = {Memsherlock: An Automated Debugger for Unknown Memory Corruption Vulnerabilities},
 booktitle = {Proceedings of the 14th ACM Conference on Computer and Communications Security},
 series = {CCS '07},
 year = {2007},
 isbn = {978-1-59593-703-2},
 location = {Alexandria, Virginia, USA},
 pages = {562--572},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1315245.1315314},
 doi = {10.1145/1315245.1315314},
 acmid = {1315314},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {debugging, memory corruption, vulnerability analysis},
}

@inproceedings{Berger:2006:DPM:1133981.1134000,
 author = {Berger, Emery D. and Zorn, Benjamin G.},
 title = {DieHard: Probabilistic Memory Safety for Unsafe Languages},
 booktitle = {Proceedings of the 2006 ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '06},
 year = {2006},
 isbn = {1-59593-320-4},
 location = {Ottawa, Ontario, Canada},
 pages = {158--168},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1133981.1134000},
 doi = {10.1145/1133981.1134000},
 acmid = {1134000},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {DieHard, dynamic memory allocation, probabilistic memory safety, randomization, replication},
}

@INPROCEEDINGS{Hastings91purify:fast,
    author = {Reed Hastings and Bob Joyce},
    title = {Purify: Fast detection of memory leaks and access errors},
    booktitle = {In Proc. of the Winter 1992 USENIX Conference},
    year = {1991},
    pages = {125--138}
}

@book{Griffith:2002:GCR:863211,
 author = {Griffith, Arthur},
 title = {GCC: The Complete Reference},
 year = {2002},
 isbn = {0072224053},
 edition = {1},
 publisher = {McGraw-Hill, Inc.},
 address = {New York, NY, USA},
}

@article{cutest2014,
year={2014},
issn={0926-6003},
journal={Computational Optimization and Applications},
doi={10.1007/s10589-014-9687-3},
title={CUTEst: a Constrained and Unconstrained Testing Environment with safe threads for mathematical optimization},
url={http://dx.doi.org/10.1007/s10589-014-9687-3},
publisher={Springer US},
keywords={CUTE; CUTEr; CUTEst; Optimization; Modeling; Benchmarking},
author={Gould, NicholasI.M. and Orban, Dominique and Toint, PhilippeL.},
pages={1-13},
language={English}
}

@inproceedings{Untch:1993:MAU:154183.154265,
 author = {Untch, Roland H. and Offutt, A. Jefferson and Harrold, Mary Jean},
 title = {Mutation Analysis Using Mutant Schemata},
 booktitle = {Proceedings of the 1993 ACM SIGSOFT International Symposium on Software Testing and Analysis},
 series = {ISSTA '93},
 year = {1993},
 isbn = {0-89791-608-5},
 location = {Cambridge, Massachusetts, USA},
 pages = {139--148},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/154183.154265},
 doi = {10.1145/154183.154265},
 acmid = {154265},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {fault-based testing, mutation analysis, program schemata, software testing},
}

@Inbook{arcuri-ssbse-2011,
author="Arcuri, Andrea
and Fraser, Gordon",
title="On Parameter Tuning in Search Based Software Engineering",
bookTitle="Search Based Software Engineering: Third International Symposium, SSBSE 2011, Szeged, Hungary, September 10-12, 2011. Proceedings",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="33--47",
isbn="978-3-642-23716-4",
doi="10.1007/978-3-642-23716-4_6",
url="http://dx.doi.org/10.1007/978-3-642-23716-4_6"
}

@inproceedings{Berger:2002:RCM:582419.582421,
 author = {Berger, Emery D. and Zorn, Benjamin G. and McKinley, Kathryn S.},
 title = {Reconsidering Custom Memory Allocation},
 booktitle = {Object-oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA '02},
 year = {2002},
 isbn = {1-58113-471-1},
 location = {Seattle, Washington, USA},
 url = {http://doi.acm.org/10.1145/582419.582421},
 doi = {10.1145/582419.582421},
 acmid = {582421},
 old_publisher = {ACM},
 old_address = {New York, NY, USA},
}

@inproceedings{Brake:2008:ADS:1370018.1370031,
 author = {Brake, Nevon and Cordy, James R. and Dan Y, Elizabeth and Litoiu, Marin and Popes U, Valentina},
 title = {Automating Discovery of Software Tuning Parameters},
 booktitle = {Workshop on Software Engineering for Adaptive and Self-managing Systems},
 series = {SEAMS '08},
 year = {2008},
 isbn = {978-1-60558-037-1},
 location = {Leipzig, Germany},
 url = {http://doi.acm.org/10.1145/1370018.1370031},
 doi = {10.1145/1370018.1370031},
 acmid = {1370031},
 old_publisher = {ACM},
 old_address = {New York, NY, USA},
 keywords = {autonomic computing, design recovery, rearchitecture, static analysis, tuning parameter},
}

@inproceedings{Colmenar:2011:MOD:2001576.2001820,
 author = {Colmenar, J. Manuel and Risco-Mart\'{\i}n, Jos{\'e} L. and Atienza, David and Hidalgo, J. Ignacio},
 title = {Multi-objective Optimization of Dynamic Memory Managers Using Grammatical Evolution},
 booktitle = {Conference on Genetic and Evolutionary Computation},
 series = {GECCO '11},
 year = {2011},
 isbn = {978-1-4503-0557-0},
 location = {Dublin, Ireland},
 url = {http://doi.acm.org/10.1145/2001576.2001820},
 doi = {10.1145/2001576.2001820},
 acmid = {2001820},
 old_publisher = {ACM},
 old_address = {New York, NY, USA},
 keywords = {embedded systems design, evolutionary computation, genetic programming, grammatical evolution},
}

@inproceedings{Tapus:2002:AHT:762761.762771,
 author = {\c{T}\={a}pu\c{s}, Cristian and Chung, I-Hsin and Hollingsworth, Jeffrey K.},
 title = {Active Harmony: Towards Automated Performance Tuning},
 booktitle = {Conference on Supercomputing},
 series = {Supercomputing '02},
 year = {2002},
 location = {Baltimore, Maryland},
 url = {http://dl.acm.org/citation.cfm?id=762761.762771},
 acmid = {762771},
 old_publisher = {IEEE Computer Society Press},
 old_address = {Los Alamitos, CA, USA},
}

@ARTICLE{996017,
author={Deb, K. and Pratap, A. and Agarwal, S. and Meyarivan, T.},
journal={Evolutionary Computation, IEEE Transactions on},
title={A fast and elitist multiobjective genetic algorithm: {NSGA-II}},
year={2002},
volume={6},
number={2},
abstract={Multi-objective evolutionary algorithms (MOEAs) that use non-dominated sorting and sharing have been criticized mainly for: (1) their O(MN3) computational complexity (where M is the number of objectives and N is the population size); (2) their non-elitism approach; and (3) the need to specify a sharing parameter. In this paper, we suggest a non-dominated sorting-based MOEA, called NSGA-II (Non-dominated Sorting Genetic Algorithm II), which alleviates all of the above three difficulties. Specifically, a fast non-dominated sorting approach with O(MN2) computational complexity is presented. Also, a selection operator is presented that creates a mating pool by combining the parent and offspring populations and selecting the best N solutions (with respect to fitness and spread). Simulation results on difficult test problems show that NSGA-II is able, for most problems, to find a much better spread of solutions and better convergence near the true Pareto-optimal front compared to the Pareto-archived evolution strategy and the strength-Pareto evolutionary algorithm - two other elitist MOEAs that pay special attention to creating a diverse Pareto-optimal front. Moreover, we modify the definition of dominance in order to solve constrained multi-objective problems efficiently. Simulation results of the constrained NSGA-II on a number of test problems, including a five-objective, seven-constraint nonlinear problem, are compared with another constrained multi-objective optimizer, and the much better performance of NSGA-II is observed},
keywords={Pareto distribution;computational complexity;constraint theory;convergence;genetic algorithms;operations research;simulation;sorting;NSGA-II;Nondominated Sorting Genetic Algorithm II;Pareto-archived evolution strategy;Pareto-optimal front;algorithm performance;computational complexity;constrained multi-objective problems;constraint handling;convergence;dominance definition;fast elitist multi-objective genetic algorithm;mating pool;multi-criterion decision making;multi-objective evolutionary algorithm;multi-objective optimization;nondominated sharing;nonlinear problem;objectives;parent/offspring population combination;population size;selection operator;simulation;solution fitness;solution spread;strength-Pareto evolutionary algorithm;Associate members;Computational complexity;Computational modeling;Constraint optimization;Decision making;Diversity reception;Evolutionary computation;Genetic algorithms;Sorting;Testing},
doi={10.1109/4235.996017},
ISSN={1089-778X},
}

@article{SIR2005,
year={2005},
issn={1382-3256},
journal={Empirical Software Engineering},
volume={10},
number={4},
doi={10.1007/s10664-005-3861-2},
title={Supporting Controlled Experimentation with Testing Techniques: An Infrastructure and its Potential Impact},
url={http://dx.doi.org/10.1007/s10664-005-3861-2},
publisher={Kluwer Academic Publishers},
keywords={Software testing; regression testing; controlled experimentation; experiment infrastructure},
author={Do, Hyunsook and Elbaum, Sebastian and Rothermel, Gregg},
language={English}
}

@incollection{attainment_surface:1996,
year={1996},
isbn={978-3-540-61723-5},
booktitle={PPSN},
doi={10.1007/3-540-61723-X_1022},
title={On the performance assessment and comparison of stochastic multiobjective optimizers},
url={http://dx.doi.org/10.1007/3-540-61723-X_1022},
publisher={Springer Berlin Heidelberg},
author={Fonseca, CarlosM. and Fleming, PeterJ.},
language={English}
}

@inproceedings{Harman:2007:CSF:1253532.1254729,
 author = {Harman, Mark},
 title = {The Current State and Future of Search Based Software Engineering},
 booktitle = {2007 Future of Software Engineering},
 series = {FOSE '07},
 year = {2007},
 isbn = {0-7695-2829-5},
 url = {http://dx.doi.org/10.1109/FOSE.2007.29},
 doi = {10.1109/FOSE.2007.29},
 acmid = {1254729},
}

@inproceedings{Harman:2014:GIA:2593929.2600116,
 author = {Harman, Mark and Jia, Yue and Langdon, William B. and Petke, Justyna and Moghadam, Iman Hemati and Yoo, Shin and Wu, Fan},
 title = {Genetic Improvement for Adaptive Software Engineering (Keynote)},
 booktitle = {Symposium on Software Engineering for Adaptive and Self-Managing Systems},
 series = {SEAMS},
 year = {2014},
 isbn = {978-1-4503-2864-7},
 location = {Hyderabad, India},
 url = {http://doi.acm.org/10.1145/2593929.2600116},
 doi = {10.1145/2593929.2600116},
 acmid = {2600116},
 old_publisher = {ACM},
 old_address = {New York, NY, USA},
 keywords = {Artificial Intelligence, Genetic Improvement, Machine Learning, Search Based Software Engineering},
}

@inproceedings{Hoffmann:2011:DKR:1950365.1950390,
 author = {Hoffmann, Henry and Sidiroglou, Stelios and Carbin, Michael and Misailovic, Sasa and Agarwal, Anant and Rinard, Martin},
 title = {Dynamic Knobs for Responsive Power-aware Computing},
 booktitle = {Architectural Support for Programming Languages and Operating Systems},
 year = {2011},
 isbn = {978-1-4503-0266-1},
 location = {Newport Beach, California, USA},
 url = {http://doi.acm.org/10.1145/1950365.1950390},
 doi = {10.1145/1950365.1950390},
 acmid = {1950390},
 old_publisher = {ACM},
 old_address = {New York, NY, USA},
 keywords = {accuracy-aware computing, power-aware computing, self-aware systems},
}

@INPROCEEDINGS{4401979,
author={Hutter, Frank and Babic, Domagoj and Hoos, Holger H. and Hu, A.J.},
booktitle={Formal Methods in Computer Aided Design, 2007. FMCAD '07},
title={Boosting Verification by Automatic Tuning of Decision Procedures},
year={2007},
month={Nov},
abstract={Parameterized heuristics abound in computer aided design and verification, and manual tuning of the respective parameters is difficult and time-consuming. Very recent results from the artificial intelligence (AI) community suggest that this tuning process can be automated, and that doing so can lead to significant performance improvements; furthermore, automated parameter optimization can provide valuable guidance during the development of heuristic algorithms. In this paper, we study how such an AI approach can improve a state-of-the-art SAT solver for large, real-world bounded model-checking and software verification instances. The resulting, automatically-derived parameter settings yielded runtimes on average 4.5 times faster on bounded model checking instances and 500 times faster on software verification problems than extensive hand-tuning of the decision procedure. Furthermore, the availability of automatic tuning influenced the design of the solver, and the automatically-derived parameter settings provided a deeper insight into the properties of problem instances.},
keywords={Artificial intelligence;Boosting;Encoding;Formal verification;Hardware;Heuristic algorithms;Runtime;Support vector machine classification;Support vector machines;Testing;Boolean Satisfiability;Decision Procedures;Search Parameter Optimization},
doi={10.1109/FAMCAD.2007.9},
}

@article{hutter2009paramils,
  title={Param{ILS}: an automatic algorithm configuration framework},
  author={Hutter, Frank and Hoos, Holger H and Leyton-Brown, Kevin and St{\"u}tzle, Thomas},
  journal={Journal of Artificial Intelligence Research},
  volume={36},
  number={1},
  year={2009}
}

@ARTICLE{5487526,
author={Yue Jia and Harman, M.},
journal={Software Engineering, IEEE Transactions on},
title={An Analysis and Survey of the Development of Mutation Testing},
year={2011},
volume={37},
number={5},
abstract={Mutation Testing is a fault-based software testing technique that has been widely studied for over three decades. The literature on Mutation Testing has contributed a set of approaches, tools, developments, and empirical results. This paper provides a comprehensive analysis and survey of Mutation Testing. The paper also presents the results of several development trend analyses. These analyses provide evidence that Mutation Testing techniques and tools are reaching a state of maturity and applicability, while the topic of Mutation Testing itself is the subject of increasing interest.},
keywords={fault diagnosis;program testing;comprehensive analysis;development trend analysis;empirical results;fault-based software testing technique;mutation testing development;mutation testing technique;mutation testing tool;Automata;Books;Computer languages;Educational institutions;Fault detection;Genetic mutations;History;Java;Programming profession;Software testing;Mutation testing;survey.},
doi={10.1109/TSE.2010.62},
ISSN={0098-5589},
}

@Inbook{autotuning,
author="Katagiri, Takahiro
and Kise, Kenji
and Honda, Hiroaki
and Yuba, Toshitsugu",
title="FIBER: A Generalized Framework for Auto-tuning Software",
bookTitle="High Performance Computing: 5th International Symposium, ISHPC 2003, Tokyo-Odaiba, Japan, October 20-22, 2003. Proceedings 13",
year="2003",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="146--159",
isbn="978-3-540-39707-6",
doi="10.1007/978-3-540-39707-6_11",
url="http://dx.doi.org/10.1007/978-3-540-39707-6_11"
}

@inproceedings{Langdon:2014:IMI:2576768.2598244,
 author = {Langdon, William B. and Modat, Marc and Petke, Justyna and Harman, Mark},
 title = {Improving 3D Medical Image Registration CUDA Software with Genetic Programming},
 booktitle = {Conference on Genetic and Evolutionary Computation},
 series = {GECCO '14},
 year = {2014},
 isbn = {978-1-4503-2662-9},
 location = {Vancouver, BC, Canada},
 url = {http://doi.acm.org/10.1145/2576768.2598244},
 doi = {10.1145/2576768.2598244},
 acmid = {2598244},
 old_publisher = {ACM},
 old_address = {New York, NY, USA},
 keywords = {GPGPU, SBSE, medicine, software engineering},
}

@misc{lea1996memory,
  title={A memory allocator},
  author={Lea, Doug and Gloger, Wolfram},
  month = {April},
  year={2000},
  note = {http://g.oswego.edu/dl/html/malloc.html}
}

@Inbook{geneticimprovementJP,
author="Petke, Justyna
and Langdon, William B.
and Harman, Mark",
title="Applying Genetic Improvement to MiniSAT",
bookTitle="Search Based Software Engineering: 5th International Symposium, SSBSE 2013, St. Petersburg, Russia, August 24-26, 2013. Proceedings",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="257--262",
isbn="978-3-642-39742-4",
doi="10.1007/978-3-642-39742-4_21",
url="http://dx.doi.org/10.1007/978-3-642-39742-4_21"
}

@article{RiscoMartin2010572,
title = "A parallel evolutionary algorithm to optimize dynamic memory managers in embedded systems ",
journal = "Parallel Computing ",
volume = "36",
number = "10 - 11",
year = "2010",
note = "Parallel Architectures and Bioinspired Algorithms",
issn = "0167-8191",
doi = "http://dx.doi.org/10.1016/j.parco.2010.07.001",
url = "http://www.sciencedirect.com/science/article/pii/S0167819110000955",
author = "Jos{\'e} L. Risco-Mart\'{\i}n and David Atienza and J. Manuel Colmenar and Oscar Garnica",
keywords = "Embedded systems design",
keywords = "Dynamic memory management",
keywords = "Evolutionary computation",
keywords = "Distributed simulation ",
}

@inproceedings{Risco-Martin:2009:ODM:1569901.1570116,
 author = {Risco-Mart\'{\i}n, Jos{\'e} L. and Atienza, David and Gonzalo, Rub{\'e}n and Hidalgo, J. Ignacio},
 title = {Optimization of Dynamic Memory Managers for Embedded Systems Using Grammatical Evolution},
 booktitle = {Conference on Genetic and Evolutionary Computation},
 series = {GECCO '09},
 year = {2009},
 isbn = {978-1-60558-325-9},
 location = {Montreal, Qu\&\#233;bec, Canada},
 url = {http://doi.acm.org/10.1145/1569901.1570116},
 doi = {10.1145/1569901.1570116},
 acmid = {1570116},
 old_publisher = {ACM},
 old_address = {New York, NY, USA},
 keywords = {embedded systems design, evolutionary computation, genetic programming, grammatical evolution},
}

@article{RiscoMartín2014109,
title = "A methodology to automatically optimize dynamic memory managers applying grammatical evolution ",
journal = "Journal of Systems and Software ",
volume = "91",
number = "0",
year = "2014",
note = "",
issn = "0164-1212",
doi = "http://dx.doi.org/10.1016/j.jss.2013.12.044",
url = "http://www.sciencedirect.com/science/article/pii/S016412121400017X",
author = "Jos{\'e} L. Risco-Mart\'{\i}n and J. Manuel Colmenar and J. Ignacio Hidalgo and Juan Lanchares and Josefa D\'{\i}az",
keywords = "Genetic programming",
keywords = "Dynamic memory manager",
keywords = "Multi-objective optimization ",
}

@INPROCEEDINGS{5477100,
author={Schuler, D. and Zeller, A.},
booktitle={Software Testing, Verification and Validation (ICST)},
title={(Un-)Covering Equivalent Mutants},
year={2010},
month={April},
keywords={Java;program testing;public domain software;Java programs;artificial defects;equivalent mutants;mutation testing measures;open source JAVALANCHE framework;program semantics;Costs;Detectors;Genetic mutations;Java;Software measurement;Software quality;Software testing;Time measurement;code coverage;dynamic analysis;mutation testing},
doi={10.1109/ICST.2010.30},}

@INPROCEEDINGS{Vuduc01statisticalmodels,
    author = {Richard Vuduc and James W. Demmel and Jeff Bilmes},
    title = {Statistical Models for Automatic Performance Tuning},
    booktitle = {International Conference on Computational Science (ICCS)},
    year = {2001},
}

@inproceedings{Whaley:1998:ATL:509058.509096,
 author = {Whaley, R. Clint and Dongarra, Jack J.},
 title = {Automatically Tuned Linear Algebra Software},
 booktitle = {Conference on Supercomputing},
 series = {Supercomputing '98},
 year = {1998},
 isbn = {0-89791-984-X},
 location = {San Jose, CA},
 url = {http://dl.acm.org/citation.cfm?id=509058.509096},
 acmid = {509096},
 old_publisher = {IEEE Computer Society},
 old_address = {Washington, DC, USA},
 keywords = {BLAS, code generation, high performance, linear algebra, optimization, tuning},
}

@ARTICLE{797969,
author={Zitzler, E. and Thiele, L.},
journal={IEEE Transactions on Evolutionary Computation},
title={Multiobjective evolutionary algorithms: a comparative case study and the strength Pareto approach},
year={1999},
month={Nov},
volume={3},
number={4},
}
@article{Zorn:1992:EMS:142181.142200,
 author = {Zorn, Benjamin and Grunwald, Dirk},
 title = {Empirical Measurements of Six Allocation-intensive {C} Programs},
 journal = {SIGPLAN Not.},
 issue_date = {Dec. 1992},
 volume = {27},
 number = {12},
 month = dec,
 year = {1992},
 issn = {0362-1340},
 url = {http://doi.acm.org/10.1145/142181.142200},
 doi = {10.1145/142181.142200},
 acmid = {142200},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@Inbook{justyna2013,
author="Petke, Justyna
and Harman, Mark
and Langdon, William B.
and Weimer, Westley",
title="Using Genetic Improvement and Code Transplants to Specialise a C++ Program to a Problem Class",
bookTitle="Genetic Programming: 17th European Conference, EuroGP 2014, Granada, Spain, April 23-25, 2014, Revised Selected Papers",
year="2014",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="137--149",
isbn="978-3-662-44303-3",
doi="10.1007/978-3-662-44303-3_12",
url="http://dx.doi.org/10.1007/978-3-662-44303-3_12"
}

@article{weimerGPEM14,
year={2014},
issn={1389-2576},
journal={Genetic Programming and Evolvable Machines},
volume={15},
number={3},
doi={10.1007/s10710-013-9195-8},
title={Software mutational robustness},
url={http://dx.doi.org/10.1007/s10710-013-9195-8},
publisher={Springer US},
keywords={Mutational robustness; Genetic programming; Mutation testing; Proactive diversity; N-version programming; Neutral landscapes},
author={Schulte, Eric and Fry, ZacharyP. and Fast, Ethan and Weimer, Westley and Forrest, Stephanie},
language={English}
}

@InProceedings{mh:icst14-keynote,
author = "Mark Harman and Yue Jia and Yuanyuan Zhang",
title = "Achievements, open problems and challenges for search based software testing (keynote)",
booktitle = "$8^{th}$ {IEEE} International Conference on Software Testing, Verification and Validation ({ICST 2014})",
address = "Graz, Austria",
month = "April",
year =  2015
}

@INPROCEEDINGS{JiaH08a,
  author = {Yue Jia and Mark Harman},
  title = {{MILU}: {A} {C}ustomizable, {R}untime-{O}ptimized {H}igher {O}rder
	{M}utation {T}esting {T}ool for the {F}ull {C} {L}anguage},
  booktitle = {Proceedings of the TAIC PART'08},
  year = {2008},
  pages = {94-98},
  address = {Windsor, UK},
  month = {29-31 August},

}

@inproceedings{Yao:2014:SES:2568225.2568265,
 author = {Yao, Xiangjuan and Harman, Mark and Jia, Yue},
 title = {A Study of Equivalent and Stubborn Mutation Operators Using Human Analysis of Equivalence},
 booktitle = {Proceedings of the 36th International Conference on Software Engineering},
 series = {ICSE 2014},
 year = {2014},
 isbn = {978-1-4503-2756-5},
 location = {Hyderabad, India},
 pages = {919--930},
 numpages = {12},
 keywords = {Equivalent Mutant, Mutation Testing, Stubborn Mutant},
}


@INPROCEEDINGS{MikeEQ2015,
 author = {Mike Papadakis and Yue Jia and Mark Harman and Yves Le Traon},
 title = {{T}rivial {C}ompiler {E}quivalence: {A} {L}arge {S}cale {E}mpirical {S}tudy of a {S}imple {F}ast and {E}ffective {E}quivalent {M}utant {D}etection {T}echnique},
   booktitle = {Proceedings of the 37th International Conference on Software Engineering},
	year = {15},
	note = {To appear}
}

@incollection{babelPidgin,
year={2014},
booktitle={Search-Based Software Engineering},
volume={8636},
series={Lecture Notes in Computer Science},
title={Babel Pidgin: SBSE Can Grow and Graft Entirely New Functionality into a Real World System},
publisher={Springer International Publishing},
author={Harman, Mark and Jia, Yue and Langdon, WilliamB.},
pages={247-252},

}

@INPROCEEDINGS{5463279,
author={D'Ambros, M. and Lanza, M. and Robbes, R.},
booktitle={Mining Software Repositories (MSR), 2010 7th IEEE Working Conference on},
title={An extensive comparison of bug prediction approaches},
year={2010},
month={May},
pages={31-41},
keywords={program debugging;resource allocation;software engineering;bug prediction approaches;resource allocation problem;software defects;software engineering;Computer bugs;Computer science;Entropy;Informatics;Open source software;Power system modeling;Predictive models;Software engineering;Software systems;Stability},
doi={10.1109/MSR.2010.5463279},}

@inproceedings{Giger:2011:CFS:1985441.1985456,
 author = {Giger, Emanuel and Pinzger, Martin and Gall, Harald C.},
 title = {Comparing Fine-grained Source Code Changes and Code Churn for Bug Prediction},
 booktitle = {Proceedings of the 8th Working Conference on Mining Software Repositories},
 series = {MSR '11},
 year = {2011},
 isbn = {978-1-4503-0574-7},
 location = {Waikiki, Honolulu, HI, USA},
 pages = {83--92},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1985441.1985456},
 doi = {10.1145/1985441.1985456},
 acmid = {1985456},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code churn, nonlinear regression, prediction models, software bugs, source code changes},
}

@inproceedings{Shivaji:2009:RFI:1747491.1747564,
 author = {Shivaji, Shivkumar and Jr., E. James Whitehead and Akella, Ram and Kim, Sunghun},
 title = {Reducing Features to Improve Bug Prediction},
 booktitle = {Proceedings of the 2009 IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE '09},
 year = {2009},
 isbn = {978-0-7695-3891-4},
 pages = {600--604},
 numpages = {5},
 url = {http://dx.doi.org/10.1109/ASE.2009.76},
 doi = {10.1109/ASE.2009.76},
 acmid = {1747564},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Reliability, Bug prediction, Machine Learning, Feature Selection},
}

@article{Offutt:1996:EDS:227607.227610,
 author = {Offutt, A. Jefferson and Lee, Ammei and Rothermel, Gregg and Untch, Roland H. and Zapf, Christian},
 title = {An Experimental Determination of Sufficient Mutant Operators},
 journal = {ACM Trans. Softw. Eng. Methodol.},
 issue_date = {April 1996},
 volume = {5},
 number = {2},
 month = apr,
 year = {1996},
 issn = {1049-331X},
 pages = {99--118},
 numpages = {20},
 url = {http://doi.acm.org/10.1145/227607.227610},
 doi = {10.1145/227607.227610},
 acmid = {227610},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@incollection{memoryallocatorreview1995,
year={1995},
isbn={978-3-540-60368-9},
booktitle={Memory Management},
volume={986},
series={Lecture Notes in Computer Science},
editor={Baler, HenryG.},
doi={10.1007/3-540-60368-9_19},
title={Dynamic storage allocation: A survey and critical review},
url={http://dx.doi.org/10.1007/3-540-60368-9_19},
publisher={Springer Berlin Heidelberg},
author={Wilson, PaulR. and Johnstone, MarkS. and Neely, Michael and Boles, David},
pages={1-116}
}

@article{Johnstone:1998:MFP:301589.286864,
 author = {Johnstone, Mark S. and Wilson, Paul R.},
 title = {The Memory Fragmentation Problem: Solved?},
 journal = {SIGPLAN Not.},
 issue_date = {March 1999},
 volume = {34},
 number = {3},
 month = oct,
 year = {1998},
 issn = {0362-1340},
 pages = {26--36},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/301589.286864},
 doi = {10.1145/301589.286864},
 acmid = {286864},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{RiscoMartin2011755,
title = "Simulation of high-performance memory allocators ",
journal = "Microprocessors and Microsystems ",
volume = "35",
number = "8",
pages = "755 - 765",
year = "2011",
note = "<ce:title>Design and Verification of Complex Digital Systems</ce:title> ",
issn = "0141-9331",
doi = "http://dx.doi.org/10.1016/j.micpro.2011.08.003",
url = "http://www.sciencedirect.com/science/article/pii/S0141933111000937",
author = "Jos{\'e} L. Risco-Mart\'{\i}n and J.Manuel Colmenar and David Atienza and J.Ignacio Hidalgo",
keywords = "Dynamic memory management",
keywords = "Memory allocation",
keywords = "Embedded systems design",
keywords = "Evolutionary computation",
keywords = "Grammatical evolution ",
abstract = "For the last 30&#xa0;years, a large variety of memory allocators have been proposed. Since performance, memory usage and energy consumption of each memory allocator differs, software engineers often face difficult choices in selecting the most suitable approach for their applications. To this end, custom allocators are developed from scratch, which is a difficult and error-prone process. This issue has special impact in the field of portable consumer embedded systems, that must execute a limited amount of multimedia applications, demanding high performance and extensive memory usage at a low energy consumption. This paper presents a flexible and efficient simulator to study Dynamic Memory Managers (DMMs), a composition of one or more memory allocators. This novel approach allows programmers to simulate custom and general DMMs, which can be composed without incurring any additional runtime overhead or additional programming cost. We show that this infrastructure simplifies \{DMM\} construction, mainly because the target application does not need to be compiled every time a new \{DMM\} must be evaluated and because we propose a structured method to search and build \{DMMs\} in an object-oriented fashion. Within a search procedure, the system designer can choose the “best” allocator by simulation for a particular target application and embedded system. In our evaluation, we show that our scheme delivers better performance, less memory usage and less energy consumption than single memory allocators. "
}

﻿@article {SPE:SPE4380230804,
author = {Grunwald, Dirk and Zorn, Benjamin},
title = {Customalloc: Efficient synthesized memory allocators},
journal = {Software: Practice and Experience},
volume = {23},
number = {8},
publisher = {John Wiley & Sons, Ltd.},
issn = {1097-024X},
url = {http://dx.doi.org/10.1002/spe.4380230804},
doi = {10.1002/spe.4380230804},
pages = {851--869},
keywords = {Dynamic storage allocation, Profile-based optimization, Memory management, Performance evaluation, Program customization},
year = {1993},
abstract = {The allocation and disposal of memory is a ubiquitous operation in most programs. Rarely do programmers concern themselves with details of memory allocators; most assume that memory allocators provided by the system perform well. Yet, in some applications, programmers use domain-specific knowledge in an attempt to improve the speed or memory utilization of memory allocators.In this paper, we describe a program (CustoMalloc) that synthesizes a memory allocator customized for a specific application. Our experiments show that the synthesized allocators are uniformly faster and more space efficient than the Berkeley UNIX allocator. Constructing a custom allocator requires little programmer effort, usually taking only a few minutes. Experience has shown that the synthesized allocators are not overly sensitive to properties of input sets and the resulting allocators are superior even to domain-specific allocators designed by programmers. Measurements show that synthesized allocators are from two to ten times faster than widely-used allocators.},
}

@article{Berger:2001:CHM:381694.378821,
 author = {Berger, Emery D. and Zorn, Benjamin G. and McKinley, Kathryn S.},
 title = {Composing High-performance Memory Allocators},
 journal = {SIGPLAN Not.},
 issue_date = {May 2001},
 volume = {36},
 number = {5},
 month = may,
 year = {2001},
 issn = {0362-1340},
 pages = {114--124},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/381694.378821},
 doi = {10.1145/381694.378821},
 acmid = {378821},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@incollection{Jula2007,
year={2007},
isbn={978-3-540-72520-6},
booktitle={Languages and Compilers for Parallel Computing},
volume={4382},
series={Lecture Notes in Computer Science},
editor={Almási, George and Caşcaval, Călin and Wu, Peng},
doi={10.1007/978-3-540-72521-3_22},
title={Custom Memory Allocation for Free},
url={http://dx.doi.org/10.1007/978-3-540-72521-3_22},
publisher={Springer Berlin Heidelberg},
author={Jula, Alin and Rauchwerger, Lawrence},
pages={299-313}
}

@inproceedings{Feng:2005:LDM:1111583.1111594,
 author = {Feng, Yi and Berger, Emery D.},
 title = {A Locality-improving Dynamic Memory Allocator},
 booktitle = {Proceedings of the 2005 Workshop on Memory System Performance},
 series = {MSP '05},
 year = {2005},
 isbn = {1-59593-147-3},
 location = {Chicago, Illinois},
 pages = {68--77},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1111583.1111594},
 doi = {10.1145/1111583.1111594},
 acmid = {1111594},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {allocator, cache locality, fragmentation, memory management, paging, vam, virtual memory},
}

@inproceedings{Jula:2009:TMA:1542431.1542447,
 author = {Jula, Alin and Rauchwerger, Lawrence},
 title = {Two Memory Allocators That Use Hints to Improve Locality},
 booktitle = {Proceedings of the 2009 International Symposium on Memory Management},
 series = {ISMM '09},
 year = {2009},
 isbn = {978-1-60558-347-1},
 location = {Dublin, Ireland},
 pages = {109--118},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1542431.1542447},
 doi = {10.1145/1542431.1542447},
 acmid = {1542447},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{Hasan20061051,
title = "A tunable hybrid memory allocator ",
journal = "Journal of Systems and Software ",
volume = "79",
number = "8",
pages = "1051 - 1063",
year = "2006",
note = "",
issn = "0164-1212",
doi = "http://dx.doi.org/10.1016/j.jss.2005.09.003",
url = "http://www.sciencedirect.com/science/article/pii/S016412120500141X",
author = "Yusuf Hasan and J. Morris Chang",
keywords = "Dynamic memory allocation",
keywords = "Performance",
keywords = "Tuning",
keywords = "Optimization ",
abstract = "Dynamic memory management can make up to 60% of total program execution time. Object oriented languages such as C++ can use 20 times more memory than procedural languages like C. Bad memory management causes severe waste of memory, several times that actually needed, in programs. It can also cause degradation in performance. Many widely used allocators waste memory and/or \{CPU\} time. Since computer memory is an expensive and limited resource its efficient utilization is necessary. There cannot exist a memory allocator that will deliver best performance and least memory consumption for all programs and therefore easily tunable allocators are required. General purpose allocators that come with operating systems give less than optimal performance or memory consumption. An allocator with a few tunable parameters can be tailored to a program’s needs for optimal performance and memory consumption. Our tunable hybrid allocator design shows 11–54% better performance and nearly equal memory consumption when compared to the well known Doug Lea allocator in seven benchmark programs. "
}

@article{Berger:2002:RCM:583854.582421,
 author = {Berger, Emery D. and Zorn, Benjamin G. and McKinley, Kathryn S.},
 title = {Reconsidering Custom Memory Allocation},
 journal = {SIGPLAN Not.},
 issue_date = {November 2002},
 volume = {37},
 number = {11},
 month = nov,
 year = {2002},
 issn = {0362-1340},
 pages = {1--12},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/583854.582421},
 doi = {10.1145/583854.582421},
 acmid = {582421},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@incollection{Justyna2014gi,
year={2014},
isbn={978-3-662-44302-6},
booktitle={Genetic Programming},
volume={8599},
series={Lecture Notes in Computer Science},
editor={Nicolau, Miguel and Krawiec, Krzysztof and Heywood, MalcolmI. and Castelli, Mauro and García-Sánchez, Pablo and Merelo, JuanJ. and Rivas Santos, VictorM. and Sim, Kevin},
doi={10.1007/978-3-662-44303-3_12},
title={Using Genetic Improvement and Code Transplants to Specialise a C++ Program to a Problem Class},
url={http://dx.doi.org/10.1007/978-3-662-44303-3_12},
publisher={Springer Berlin Heidelberg},
keywords={genetic improvement; code transplants; code specialisation; Boolean satisfiability},
author={Petke, Justyna and Harman, Mark and Langdon, WilliamB. and Weimer, Westley},
pages={137-149},
language={English}
}

@ARTICLE{6733370,
author={Langdon, W.B. and Harman, M.},
journal={Evolutionary Computation, IEEE Transactions on},
title={Optimizing Existing Software With Genetic Programming},
year={2015},
month={Feb},
volume={19},
number={1},
pages={118-135},
keywords={genetic algorithms;software engineering;GIP;GISMOE;genetic improvement of programs;genetic improvement of software for multiple objective exploration;genetic programming;software optimization;Complexity theory;DNA;Genetic programming;Grammar;Semantics;Software;${rm Bowtie2}^{GP}$;Automatic software reengineering;genetic programming (GP);multiple objective exploration;search based software engineering (SBSE)},
doi={10.1109/TEVC.2013.2281544},
ISSN={1089-778X},}

@inproceedings{fan2015gi,
 author = {Wu, Fan and Weimer, Westley and Harman, Mark and Jia, Yue and Krinke, Jens},
 title = {Deep Parameter Optimisation},
 booktitle = {Proceedings of the 2015 Conference on Genetic and Evolutionary Computation},
 year = {to appear},
}

@inproceedings{Harman:2012:GCC:2351676.2351678,
 author = {Harman, Mark and Langdon, William B. and Jia, Yue and White, David R. and Arcuri, Andrea and Clark, John A.},
 title = {The GISMOE Challenge: Constructing the Pareto Program Surface Using Genetic Programming to Find Better Programs (Keynote Paper)},
 booktitle = {Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE 2012},
 year = {2012},
 isbn = {978-1-4503-1204-2},
 location = {Essen, Germany},
 pages = {1--14},
 numpages = {14},
 doi = {10.1145/2351676.2351678},
 acmid = {2351678},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Compilation, Genetic Programming, Non-functional Properties, Pareto Surface, SBSE, Search Based Optimization},
}

@ARTICLE{5688317,
author={D. R. White and A. Arcuri and J. A. Clark},
journal={IEEE Transactions on Evolutionary Computation},
title={Evolutionary Improvement of Programs},
year={2011},
volume={15},
number={4},
pages={515-538},
keywords={genetic algorithms;optimising compilers;probability;program testing;software engineering;GP;coevolution;evolutionary improvement;genetic programming;multiobjective optimization;optimizing compilers;probability distribution;software engineering;software testing;Evolutionary computation;Genetic programming;Optimization;Program processors;Semantics;Sorting;Coevolution;embedded systems;execution time;genetic programming;multiobjective optimization;non-functional criteria;search based software engineering},
doi={10.1109/TEVC.2010.2083669},
ISSN={1089-778X},
month={Aug}}

@ARTICLE{6035728,
author={Le Goues, C. and ThanhVu Nguyen and Forrest, S. and Weimer, W.},
journal={Software Engineering, IEEE Transactions on},
title={GenProg: A Generic Method for Automatic Software Repair},
year={2012},
volume={38},
number={1},
pages={54-72},
keywords={formal specification;genetic algorithms;software maintenance;GenProg;automatic software repair;defects repair;formal specifications;genetic programming;legacy programs;program annotations;special coding practices;Automatic programming;Computer bugs;Debugging;Encoding;Maintenance engineering;Syntactics;Automatic programming;corrections;testing and debugging.},
doi={10.1109/TSE.2011.104},
ISSN={0098-5589},
month={Jan},}

@inproceedings{Wu:2015:DPO:2739480.2754648,
 author = {Wu, Fan and Weimer, Westley and Harman, Mark and Jia, Yue and Krinke, Jens},
 title = {Deep Parameter Optimisation},
 booktitle = {Proceedings of the 2015 Annual Conference on Genetic and Evolutionary Computation},
 series = {GECCO '15},
 year = {2015},
 isbn = {978-1-4503-3472-3},
 location = {Madrid, Spain},
 pages = {1375--1382},
 numpages = {8},
 doi = {10.1145/2739480.2754648},
 acmid = {2754648},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {memory allocation, parameter exposure, parameter tuning},
}



@inproceedings{Harman:2014:AME:2642937.2643008,
 author = {Harman, Mark and Jia, Yue and Reales Mateo, Pedro and Polo, Macario},
 title = {Angels and Monsters: An Empirical Investigation of Potential Test Effectiveness and Efficiency Improvement from Strongly Subsuming Higher Order Mutation},
 booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
 series = {ASE '14},
 year = {2014},
 isbn = {978-1-4503-3013-8},
 location = {Vasteras, Sweden},
 pages = {397--408},
 numpages = {12},
 doi = {10.1145/2642937.2643008},
 acmid = {2643008},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {higher order mutants, mutation testing},
}


@ARTICLE{demillo1978hints,
author={R. A. DeMillo and R. J. Lipton and F. G. Sayward},
journal={Computer},
title={Hints on Test Data Selection: Help for the Practicing Programmer},
year={1978},
volume={11},
number={4},
pages={34-41},
keywords={Computer bugs;Computer errors;Error analysis;Error correction;Process design;Programming profession;Software debugging;Software reliability;System testing},
doi={10.1109/C-M.1978.218136},
ISSN={0018-9162},
month={April},}

@inproceedings{Jia:2015:GIU:2739482.2768417,
 author = {Jia, Yue and Wu, Fan and Harman, Mark and Krinke, Jens},
 title = {Genetic Improvement Using Higher Order Mutation},
 booktitle = {Proceedings of the Companion Publication of the 2015 Annual Conference on Genetic and Evolutionary Computation},
 series = {GECCO Companion '15},
 year = {2015},
 isbn = {978-1-4503-3488-4},
 location = {Madrid, Spain},
 pages = {803--804},
 numpages = {2},
 doi = {10.1145/2739482.2768417},
 acmid = {2768417},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {GI, SBSE, higher order mutation},
}

@TECHREPORT{AgrawalDHHHKMMS89,
  author = {Hiralal Agrawal and Richard A. DeMillo and Bob Hathaway and William Hsu and Wynne Hsu and E. W. Krauser and R. J. Martin and Aditya P. Mathur and Eugene Spafford},
  title = {Design of Mutant Operators for the {C} Programming Language},
  institution = {Purdue University},
  year = {1989},
  type = {techreport},
  number = {SERC-TR-41-P},
  address = {West Lafayette, Indiana},
  month = {March},
}

@article{Jia20091379,
title = "Higher Order Mutation Testing ",
journal = "Information and Software Technology ",
volume = "51",
number = "10",
pages = "1379 - 1393",
year = "2009",
note = "{S}ource Code Analysis and Manipulation",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2009.04.016",
author = "Yue Jia and Mark Harman",
keywords = "Mutation Testing",
keywords = "Higher order mutant",
keywords = "Search techniques "
}

@INPROCEEDINGS{7194639,
author={M. Papadakis and Y. Jia and M. Harman and Y. Le Traon},
booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
title={Trivial Compiler Equivalence: A Large Scale Empirical Study of a Simple, Fast and Effective Equivalent Mutant Detection Technique},
year={2015},
volume={1},
pages={936-946},
keywords={formal verification;program compilers;program testing;TCE technique;duplicated mutants;human-based equivalence verification;mutant detection technique;mutation testing;trivial compiler equivalence technology;Benchmark testing;Java;Optimization;Scalability;Syntactics},
doi={10.1109/ICSE.2015.103},
ISSN={0270-5257},
month={May},}

@ARTICLE{92910,
author={DeMilli, R.A. and Offutt, A.J.},
journal={Software Engineering, IEEE Transactions on},
title={Constraint-based automatic test data generation},
year={1991},
month={Sep},
volume={17},
number={9},
pages={900-910},
keywords={computational complexity;program testing;Godzilla;Mothra testing system;algebraic constraints;automatic test data generation;constraint-based data generation;fault-based technique;module testing;mutation analysis;relative adequacy;Algorithms;Automatic testing;Computer science;Costs;Fault detection;Genetic mutations;Software engineering;Software systems;Software testing;System testing},
doi={10.1109/32.92910},
ISSN={0098-5589},}

@ARTICLE{57623,
author={Morell, L.J.},
journal={Software Engineering, IEEE Transactions on},
title={A theory of fault-based testing},
year={1990},
month={Aug},
volume={16},
number={8},
pages={844-857},
keywords={computational complexity;program verification;symbol manipulation;alternate expressions;alternative set;fault-based program testing;finite test;prescribed faults;program expressions;propagation equation;symbolic alternative;symbolic execution;test set;Computer science;Differential equations;Information analysis;Performance analysis;Performance evaluation;Testing},
doi={10.1109/32.57623},
ISSN={0098-5589},}

@INPROCEEDINGS{7107449,
author={J. Nanavati and F. Wu and M. Harman and Y. Jia and J. Krinke},
booktitle={Software Testing, Verification and Validation Workshops (ICSTW), 2015 IEEE Eighth International Conference on},
title={Mutation testing of memory-related operators},
year={2015},
pages={1-10},
keywords={program testing;programming languages;public domain software;control flow deviation killing criteria;memory fault detection;memory mutation operators;memory-related operators;mutation testing;open source programs;programming languages;Arrays;Computational fluid dynamics;Computer languages;Fault detection;Memory management;Resource management;Testing},
doi={10.1109/ICSTW.2015.7107449},
month={April}}

@article{Wu2016,
title = "Memory Mutation Testing ",
journal = "Information and Software Technology",
year = "2016",
note = "",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2016.03.002",
url = "http://www.sciencedirect.com/science/article/pii/S0950584916300362",
author = "Fan Wu and Jay Nanavati and Mark Harman and Yue Jia and Jens Krinke",
keywords = "Mutation testing",
keywords = "Memory mutation "
}

﻿@article {STVR:STVR1486,
author = {Arcuri, Andrea and Briand, Lionel},
title = {A Hitchhiker's guide to statistical tests for assessing randomized algorithms in software engineering},
journal = {Software Testing, Verification and Reliability},
volume = {24},
number = {3},
issn = {1099-1689},
doi = {10.1002/stvr.1486},
pages = {219--250},
keywords = {statistical difference, effect size, parametric test, nonparametric test, confidence interval, Bonferroni adjustment, systematic review, survey},
year = {2014},
}

﻿@Inbook{Neumann2015,
author="Neumann, Geoffrey
and Harman, Mark
and Poulding, Simon",
chapter="Transformed Vargha-Delaney Effect Size",
title="Search-Based Software Engineering: 7th International Symposium, SSBSE 2015, Bergamo, Italy, September 5-7, 2015, Proceedings",
year="2015",
publisher="Springer International Publishing",
pages="318--324",
isbn="978-3-319-22183-0"
}


@inproceedings{Arcuri:2008:AFS:1370175.1370223,
 author = {Arcuri, Andrea},
 title = {On the Automation of Fixing Software Bugs},
 booktitle = {Companion of the 30th International Conference on Software Engineering},
 series = {ICSE Companion '08},
 year = {2008},
 isbn = {978-1-60558-079-1},
 location = {Leipzig, Germany},
 pages = {1003--1006},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/1370175.1370223},
 doi = {10.1145/1370175.1370223},
 acmid = {1370223},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated debugging, automatic bug fixing, co-evolution, genetic programming, repair},
}

@inproceedings{Tantithamthavorn:2016:APO:2884781.2884857,
 author = {Tantithamthavorn, Chakkrit and McIntosh, Shane and Hassan, Ahmed E. and Matsumoto, Kenichi},
 title = {Automated Parameter Optimization of Classification Techniques for Defect Prediction Models},
 booktitle = {Proceedings of the 38th International Conference on Software Engineering},
 series = {ICSE '16},
 year = {2016},
 isbn = {978-1-4503-3900-1},
 location = {Austin, Texas},
 pages = {321--332},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2884781.2884857},
 doi = {10.1145/2884781.2884857},
 acmid = {2884857},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {classification techniques, experimental design, parameter optimization, software defect prediction},
}



@INPROCEEDINGS{7589813,
author={M. Boussaa and O. Barais and B. Baudry and G. Sunyé},
booktitle={2016 IEEE International Conference on Software Quality, Reliability and Security (QRS)},
title={NOTICE: A Framework for Non-Functional Testing of Compilers},
year={2016},
pages={335-346},
keywords={object-oriented programming;optimisation;program compilers;program testing;source code (software);GCC compiler;NOTICE;component-based framework;nonfunctional testing;optimization sequence;Memory management;Optimization;Program processors;Sociology;Statistics;Testing;compilers;non-functional properties;software quality;testing},
doi={10.1109/QRS.2016.45},
month={Aug},}

@Inbook{Langdon2000,
author="Langdon, W. B.
and Nordin, J. P.",
title="Seeding Genetic Programming Populations",
bookTitle="Genetic Programming: European Conference, EuroGP 2000, Edinburgh, Scotland, UK, April 15-16, 2000. Proceedings",
year="2000",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="304--315",
isbn="978-3-540-46239-2",
doi="10.1007/978-3-540-46239-2_23",
url="http://dx.doi.org/10.1007/978-3-540-46239-2_23"
}

@inproceedings{Schulte:2014:PSO:2541940.2541980,
 author = {Schulte, Eric and Dorn, Jonathan and Harding, Stephen and Forrest, Stephanie and Weimer, Westley},
 title = {Post-compiler Software Optimization for Reducing Energy},
 booktitle = {Proceedings of the 19th International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS '14},
 year = {2014},
 isbn = {978-1-4503-2305-5},
 location = {Salt Lake City, Utah, USA},
 pages = {639--652},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2541940.2541980},
 doi = {10.1145/2541940.2541980},
 acmid = {2541980},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {assembly code, compilation, evolutionary computation, mutational robustness, power modeling, profile-guided optimization, superoptimization},
}

@inproceedings{Gao:2015:SMF:2818754.2818812,
 author = {Gao, Qing and Xiong, Yingfei and Mi, Yaqing and Zhang, Lu and Yang, Weikun and Zhou, Zhaoping and Xie, Bing and Mei, Hong},
 title = {Safe Memory-leak Fixing for C Programs},
 booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 1},
 series = {ICSE '15},
 year = {2015},
 isbn = {978-1-4799-1934-5},
 location = {Florence, Italy},
 pages = {459--470},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=2818754.2818812},
 acmid = {2818812},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
}

@inproceedings{White:2008:SRP:1389095.1389437,
 author = {White, David R. and Clark, John and Jacob, Jeremy and Poulding, Simon M.},
 title = {Searching for Resource-efficient Programs: Low-power Pseudorandom Number Generators},
 booktitle = {Proceedings of the 10th Annual Conference on Genetic and Evolutionary Computation},
 series = {GECCO '08},
 year = {2008},
 isbn = {978-1-60558-130-9},
 location = {Atlanta, GA, USA},
 pages = {1775--1782},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/1389095.1389437},
 doi = {10.1145/1389095.1389437},
 acmid = {1389437},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automatic programming, genetic programming, multi-objective optimisation, non-functional requirements, search based software engineering},
}

@Inbook{Arcuri2008,
author="Arcuri, Andrea
and White, David Robert
and Clark, John
and Yao, Xin",
title="Multi-objective Improvement of Software Using Co-evolution and Smart Seeding",
bookTitle="Simulated Evolution and Learning: 7th International Conference, SEAL 2008, Melbourne, Australia, December 7-10, 2008. Proceedings",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="61--70",
isbn="978-3-540-89694-4",
doi="10.1007/978-3-540-89694-4_7",
url="http://dx.doi.org/10.1007/978-3-540-89694-4_7"
}

@INPROCEEDINGS{4630793,
author={A. Arcuri and Xin Yao},
booktitle={2008 IEEE Congress on Evolutionary Computation (IEEE World Congress on Computational Intelligence)},
title={A novel co-evolutionary approach to automatic software bug fixing},
year={2008},
pages={162-168},
keywords={formal specification;program debugging;program testing;sorting;automatic software bug fixing;buggy program;coevolutionary approach;formal specification;software engineering;software testing;sorting algorithm;Automatic programming;Automation;Computer bugs;Costs;Formal specifications;Genetic programming;Programming profession;Software debugging;Software performance;Software testing},
doi={10.1109/CEC.2008.4630793},
ISSN={1089-778X},
month={June},}

@inproceedings{Ackling:2011:EPS:2001576.2001768,
 author = {Ackling, Thomas and Alexander, Bradley and Grunert, Ian},
 title = {Evolving Patches for Software Repair},
 booktitle = {Proceedings of the 13th Annual Conference on Genetic and Evolutionary Computation},
 series = {GECCO '11},
 year = {2011},
 isbn = {978-1-4503-0557-0},
 location = {Dublin, Ireland},
 pages = {1427--1434},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/2001576.2001768},
 doi = {10.1145/2001576.2001768},
 acmid = {2001768},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {debugging, fault-repair, genetic-programming, python},
}


@ARTICLE{6613487,
author={L. Madeyski and W. Orzeszyna and R. Torkar and M. Józala},
journal={IEEE Transactions on Software Engineering},
title={Overcoming the Equivalent Mutant Problem: A Systematic Literature Review and a Comparative Experiment of Second Order Mutation},
year={2014},
volume={40},
number={1},
pages={23-42},
keywords={digital libraries;program testing;AEMG;DEM;EMP;FOM;JudyDiffOp strategy;SEM;SLR;SOM strategies;avoiding equivalent mutant generation;comparative experiment;detecting;digital libraries;equivalent mutant problem;first order mutation;mutation testing;second order mutation;suggesting;systematic literature review;Databases;Educational institutions;Informatics;Java;Libraries;Systematics;Testing;Mutation testing;equivalent mutant problem;higher order mutation;second order mutation},
doi={10.1109/TSE.2013.44},
ISSN={0098-5589},
month={Jan},}

@inproceedings{Offutt:1993:EES:257572.257597,
 author = {Offutt, A. Jefferson and Rothermel, Gregg and Zapf, Christian},
 title = {An Experimental Evaluation of Selective Mutation},
 booktitle = {Proceedings of the 15th International Conference on Software Engineering},
 series = {ICSE '93},
 year = {1993},
 isbn = {0-89791-588-7},
 location = {Baltimore, Maryland, USA},
 pages = {100--107},
 numpages = {8},
 url = {http://dl.acm.org/citation.cfm?id=257572.257597},
 acmid = {257597},
 publisher = {IEEE Computer Society Press},
 address = {Los Alamitos, CA, USA},
}

@inproceedings{Devroey:2016:FMM:2884781.2884821,
 author = {Devroey, Xavier and Perrouin, Gilles and Papadakis, Mike and Legay, Axel and Schobbens, Pierre-Yves and Heymans, Patrick},
 title = {Featured Model-based Mutation Analysis},
 booktitle = {Proceedings of the 38th International Conference on Software Engineering},
 series = {ICSE '16},
 year = {2016},
 isbn = {978-1-4503-3900-1},
 location = {Austin, Texas},
 pages = {655--666},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2884781.2884821},
 doi = {10.1145/2884781.2884821},
 acmid = {2884821},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {featured transition systems, mutation analysis, variability},
}

@inproceedings{Just:2014:MVS:2635868.2635929,
 author = {Just, Ren{\'e} and Jalali, Darioush and Inozemtseva, Laura and Ernst, Michael D. and Holmes, Reid and Fraser, Gordon},
 title = {Are Mutants a Valid Substitute for Real Faults in Software Testing?},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {654--665},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2635868.2635929},
 doi = {10.1145/2635868.2635929},
 acmid = {2635929},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Test effectiveness, code coverage, mutation analysis, real faults},
}

@INPROCEEDINGS{4976390,
author={Nan Li and Praphamontripong, U. and Offutt, J.},
booktitle={Software Testing, Verification and Validation Workshops, 2009. ICSTW '09. International Conference on},
title={An Experimental Comparison of Four Unit Test Criteria: Mutation, Edge-Pair, All-Uses and Prime Path Coverage},
year={2009},
month={April},
pages={220-229},
keywords={Java;program testing;software fault tolerance;software quality;Java class;agile process;all-uses testing;edge pair coverage testing;mutation testing;prime path coverage testing;software fault;software quality;test driven software development;unit level software testing criteria;Conferences;Fault detection;Genetic mutations;Java;Programming profession;Software engineering;Software quality;Software systems;Software testing;USA Councils},
doi={10.1109/ICSTW.2009.30},}

@ARTICLE{1703390,
author={Andrews, J.H. and Briand, L.C. and Labiche, Y. and Namin, A.S.},
journal={Software Engineering, IEEE Transactions on},
title={Using Mutation Analysis for Assessing and Comparing Testing Coverage Criteria},
year={2006},
month={Aug},
volume={32},
number={8},
pages={608-624},
keywords={data flow analysis;design of experiments;probability;program control structures;program debugging;program testing;software fault tolerance;empirical assessment;experimental design;industrial program;mutation analysis;mutation operators;program control criteria;program data flow criteria;program debugging;software fault detection probability;software testing coverage criteria;Costs;Debugging;Failure analysis;Fault detection;Genetic mutations;Industrial control;Size control;Software testing;Statistical analysis;System testing;Testing and debugging;experimental design.;test coverage of code;testing strategies},
doi={10.1109/TSE.2006.83},
ISSN={0098-5589},}

@incollection{memoryerrors2012,
year={2012},
isbn={978-3-642-33337-8},
booktitle={Research in Attacks, Intrusions, and Defenses},
volume={7462},
series={Lecture Notes in Computer Science},
editor={Balzarotti, Davide and Stolfo, SalvatoreJ. and Cova, Marco},
doi={10.1007/978-3-642-33338-5\_5},
title={Memory Errors: The Past, the Present, and the Future},
url={http://dx.doi.org/10.1007/978-3-642-33338-5\_5},
publisher={Springer Berlin Heidelberg},
author={van der Veen, Victor and dutt-Sharma, Nitish and Cavallaro, Lorenzo and Bos, Herbert},
pages={86-106},
language={English}
}

@INPROCEEDINGS{6200167,
author={Dan, H. and Hierons, R.M.},
booktitle={Software Testing, Verification and Validation (ICST), 2012 IEEE Fifth International Conference on},
title={SMT-C: A Semantic Mutation Testing Tools for C},
year={2012},
month={April},
pages={654-663},
keywords={C language;program testing;C programming language;SMT analysis;SMT-C;description language;semantic mutants;semantic mutation testing tools;Computer languages;Grammar;Indexes;Optimization;Semantics;Software;Testing;Eclipse plugin;Mutation operator;Semantic mutation testing;Unit test;Weak mutation testing},
doi={10.1109/ICST.2012.155},}

@ARTICLE{6963470,
author={Barr, E.T. and Harman, M. and McMinn, P. and Shahbaz, M. and Shin Yoo},
journal={Software Engineering, IEEE Transactions on},
title={The Oracle Problem in Software Testing: A Survey},
year={2015},
month={May},
volume={41},
number={5},
pages={507-525},
keywords={formal specification;program testing;contract-driven development;domain specific information;informal oracle guidance;informal specifications;metamorphic testing;oracle automation;software testing practice;software testing research;test oracle information;test oracle problem;Automation;Licenses;Market research;Probabilistic logic;Reliability;Software testing;Automatic testing;Test oracle;Testing formalism;automatic testing;testing formalism},
doi={10.1109/TSE.2014.2372785},
ISSN={0098-5589},}

@INPROCEEDINGS{1173287,
author={Yu-Seung Ma and Yong-Rae Kwon and J. Offutt},
booktitle={13th International Symposium on Software Reliability Engineering, 2002. Proceedings.},
title={Inter-class mutation operators for Java},
year={2002},
pages={352-363},
keywords={Java;inheritance;object-oriented programming;program testing;Java;class testing level;dynamic binding;inheritance;inter-class mutation operators;mutation testing;object-oriented programming languages;polymorphism;Computer science;Dynamic programming;Encapsulation;Fault detection;Genetic mutations;History;Java;Object oriented modeling;Object oriented programming;System testing},
doi={10.1109/ISSRE.2002.1173287},
ISSN={1071-9458},
month={},}

@techreport{Richard89designof,
  title={Design of mutant operators for the C programming language},
  author={Agrawal, Hiralal and DeMillo, Richard and Hathaway, R\_ and Hsu, William and Hsu, Wynne and Krauser, Edward and Martin, Rhonda J and Mathur, Aditya and Spafford, Eugene},
  year={1989},
  institution={Technical Report SERC-TR-41-P, Software Engineering Research Center, Department of Computer Science, Purdue University, Indiana}
}

@article{Langdon20102416,
title = "Efficient multi-objective higher order mutation testing with genetic programming ",
journal = "Journal of Systems and Software ",
volume = "83",
number = "12",
pages = "2416 - 2430",
year = "2010",
issn = "0164-1212",
doi = "http://dx.doi.org/10.1016/j.jss.2010.07.027",
url = "//www.sciencedirect.com/science/article/pii/S0164121210001883",
author = "William B. Langdon and Mark Harman and Yue Jia",
keywords = "Pareto optimality",
keywords = "Mutation testing",
keywords = "Higher order mutation",
keywords = "SBSE",
keywords = "Monte Carlo",
keywords = "Genetic algorithm",
keywords = "Genetic programming",
keywords = "NSGA-II",
keywords = "Strongly typed GP",
keywords = "Grammar based GP",
keywords = "Non-determinism",
keywords = "Triangle",
keywords = "Schedule",
keywords = "tcas",
keywords = "Gzip "
}

@inproceedings{Harman:2011:SHO:2025113.2025144,
 author = {Harman, Mark and Jia, Yue and Langdon, William B.},
 title = {Strong Higher Order Mutation-based Test Data Generation},
 booktitle = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
 series = {ESEC/FSE '11},
 year = {2011},
 isbn = {978-1-4503-0443-6},
 location = {Szeged, Hungary},
 pages = {212--222},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2025113.2025144},
 doi = {10.1145/2025113.2025144},
 acmid = {2025144},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {mutation testing, test data generation},
}

@ARTICLE{6019060,
author={G. Fraser and A. Zeller},
journal={IEEE Transactions on Software Engineering},
title={Mutation-Driven Generation of Unit Tests and Oracles},
year={2012},
volume={38},
number={2},
pages={278-292},
keywords={automatic test pattern generation;object-oriented programming;optimisation;program testing;artificial defects;automated test case generation;mutation driven generation;mutation operators;object-oriented classes;open source libraries;optimization;oracle;test suites quality;unit test;Biological cells;Generators;Genetic algorithms;Libraries;Software;Software algorithms;Testing;Mutation analysis;assertions;search-based testing.;test case generation;test oracles;unit testing},
doi={10.1109/TSE.2011.93},
ISSN={0098-5589},
month={March},}

@INPROCEEDINGS{6487127,
author={H. Haga and A. Suehiro},
booktitle={2012 IEEE International Conference on Control System, Computing and Engineering},
title={Automatic test case generation based on genetic algorithm and mutation analysis},
year={2012},
pages={119-123},
keywords={C language;genetic algorithms;program testing;C programing language program;automatic test case generation;branch and boundary value;genetic algorithm;mutation analysis;mutation scores;software test cases;Assessment of Test Cases;Genetic Algorithm (GA);Mutation Analysis;Software Testing},
doi={10.1109/ICCSCE.2012.6487127},
month={Nov},}

@inproceedings{Staats:2012:AOC:2337223.2337326,
 author = {Staats, Matt and Gay, Gregory and Heimdahl, Mats P. E.},
 title = {Automated Oracle Creation Support, or: How I Learned to Stop Worrying About Fault Propagation and Love Mutation Testing},
 booktitle = {Proceedings of the 34th International Conference on Software Engineering},
 series = {ICSE '12},
 year = {2012},
 isbn = {978-1-4673-1067-3},
 location = {Zurich, Switzerland},
 pages = {870--880},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=2337223.2337326},
 acmid = {2337326},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
}

@INPROCEEDINGS{6613033,
author={J. Svajlenko and C. K. Roy and J. R. Cordy},
booktitle={2013 7th International Workshop on Software Clones (IWSC)},
title={A mutation analysis based benchmarking framework for clone detectors},
year={2013},
pages={8-9},
keywords={software engineering;candidate clones;clone detection tools;clone detectors;mutation analysis based benchmarking framework;solid performance evaluation;Benchmark testing;Cloning;Databases;Detectors;Educational institutions;Manuals;Taxonomy;Benchmarking;Clone Detection;Evaluation;Framework;Mutation Analysis},
doi={10.1109/IWSC.2013.6613033},
month={May},}

@incollection{harman2012search,
  title={Search based software engineering: Techniques, taxonomy, tutorial},
  author={Harman, Mark and McMinn, Phil and De Souza, Jerffeson Teixeira and Yoo, Shin},
  booktitle={Empirical software engineering and verification},
  pages={1--59},
  year={2012},
  publisher={Springer}
}

@inproceedings{Ratcliff:2011:SIU:2001576.2001832,
 author = {Ratcliff, Sam and White, David R. and Clark, John A.},
 title = {Searching for Invariants Using Genetic Programming and Mutation Testing},
 booktitle = {Proceedings of the 13th Annual Conference on Genetic and Evolutionary Computation},
 series = {GECCO '11},
 year = {2011},
 isbn = {978-1-4503-0557-0},
 location = {Dublin, Ireland},
 pages = {1907--1914},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/2001576.2001832},
 doi = {10.1145/2001576.2001832},
 acmid = {2001832},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Daikon, genetic programming, invariants, mutation testing},
}

@INPROCEEDINGS{6224275,
author={A. C. Nguyen and S. C. Khoo},
booktitle={2012 9th IEEE Working Conference on Mining Software Repositories (MSR)},
title={Discovering complete API rules with mutation testing},
year={2012},
pages={151-160},
keywords={application program interfaces;data mining;formal specification;formal verification;legislation;program testing;public domain software;software maintenance;source coding;API rule;automatic mine specification;call sequence;execution trace;false positive defect;frequent pattern mining;legitimate specification;mutation testing;open source software;semantics;software construction;software maintenance;software testing;software verification;source code;suppression technique;Computer bugs;Data mining;Java;Open source software;Semantics;Testing;formal specifications;mutation testing;specification mining},
doi={10.1109/MSR.2012.6224275},
ISSN={2160-1852},
month={June},}

@inproceedings{Le:2015:FDC:2814270.2814319,
 author = {Le, Vu and Sun, Chengnian and Su, Zhendong},
 title = {Finding Deep Compiler Bugs via Guided Stochastic Program Mutation},
 booktitle = {Proceedings of the 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA 2015},
 year = {2015},
 isbn = {978-1-4503-3689-5},
 location = {Pittsburgh, PA, USA},
 pages = {386--399},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2814270.2814319},
 doi = {10.1145/2814270.2814319},
 acmid = {2814319},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Compiler testing, Markov Chain Monte Carlo, automated testing, equivalent program variants},
}

@article{Arcaini201752,
title = "A novel use of equivalent mutants for static anomaly detection in software artifacts ",
journal = "Information and Software Technology ",
volume = "81",
pages = "52 - 64",
year = "2017",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2016.01.019",
url = "//www.sciencedirect.com/science/article/pii/S0950584916300180",
author = "Paolo Arcaini and Angelo Gargantini and Elvinia Riccobene and Paolo Vavassori",
keywords = "Equivalent mutant",
keywords = "Static anomaly",
keywords = "Quality measure "
}

@article{Wu201797,
title = "Memory mutation testing ",
journal = "Information and Software Technology ",
volume = "81",
number = "",
pages = "97 - 111",
year = "2017",
note = "",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2016.03.002",
url = "//www.sciencedirect.com/science/article/pii/S0950584916300362",
author = "Fan Wu and Jay Nanavati and Mark Harman and Yue Jia and Jens Krinke",
keywords = "Mutation testing",
keywords = "Memory mutation "
}

@Inbook{Wu2016homi_deprecated,
author="Wu, Fan
and Harman, Mark
and Jia, Yue
and Krinke, Jens",
title="HOMI: Searching Higher Order Mutants for Software Improvement",
bookTitle="Search Based Software Engineering: 8th International Symposium, SSBSE 2016, Raleigh, NC, USA, October 8-10, 2016, Proceedings",
year="2016",
publisher="Springer International Publishing",
address="Cham",
pages="18--33",
isbn="978-3-319-47106-8",
doi="10.1007/978-3-319-47106-8_2",
url="http://dx.doi.org/10.1007/978-3-319-47106-8_2"
}

@inproceedings{wu2016homi,
  title={HOMI: Searching Higher Order Mutants for Software Improvement},
  author={Wu, Fan and Harman, Mark and Jia, Yue and Krinke, Jens},
  booktitle={International Symposium on Search Based Software Engineering},
  pages={18--33},
  year={2016},
  organization={Springer}
}

@Inbook{Dan2014_deprecated,
author="Dan, Haitao
and Harman, Mark
and Krinke, Jens
and Li, Lingbo
and Marginean, Alexandru
and Wu, Fan",
title="Pidgin Crasher: Searching for Minimised Crashing GUI Event Sequences",
bookTitle="Search-Based Software Engineering: 6th International Symposium, SSBSE 2014, Fortaleza, Brazil, August 26-29, 2014. Proceedings",
year="2014",
publisher="Springer International Publishing",
address="Cham",
pages="253--258",
isbn="978-3-319-09940-8",
doi="10.1007/978-3-319-09940-8_21",
url="http://dx.doi.org/10.1007/978-3-319-09940-8_21"
}

@inproceedings{Dan2014,
  title={Pidgin crasher: searching for minimised crashing GUI event sequences},
  author={Dan, Haitao and Harman, Mark and Krinke, Jens and Li, Lingbo and Marginean, Alexandru and Wu, Fan},
  booktitle={International Symposium on Search Based Software Engineering},
  pages={253--258},
  year={2014},
  organization={Springer}
}

@Inbook{Li2015_deprecated,
author="Li, Lingbo
and Harman, Mark
and Wu, Fan
and Zhang, Yuanyuan",
title="SBSelector: Search Based Component Selection for Budget Hardware",
bookTitle="Search-Based Software Engineering: 7th International Symposium, SSBSE 2015, Bergamo, Italy, September 5-7, 2015, Proceedings",
year="2015",
publisher="Springer International Publishing",
address="Cham",
pages="289--294",
isbn="978-3-319-22183-0",
doi="10.1007/978-3-319-22183-0_25",
url="http://dx.doi.org/10.1007/978-3-319-22183-0_25"
}

@inproceedings{Li2015,
  title={SBSelector: Search based component selection for budget hardware},
  author={Li, Lingbo and Harman, Mark and Wu, Fan and Zhang, Yuanyuan},
  booktitle={International Symposium on Search Based Software Engineering},
  pages={289--294},
  year={2015},
  organization={Springer}
}

@inproceedings{Bowes:2016:MFP:2931037.2931039,
 author = {Bowes, David and Hall, Tracy and Harman, Mark and Jia, Yue and Sarro, Federica and Wu, Fan},
 title = {Mutation-aware Fault Prediction},
 booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
 series = {ISSTA 2016},
 year = {2016},
 isbn = {978-1-4503-4390-9},
 location = {Saarbr\&\#252;cken, Germany},
 pages = {330--341},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2931037.2931039},
 doi = {10.1145/2931037.2931039},
 acmid = {2931039},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Empirical Study, Mutation Testing, Software Defect Prediction, Software Fault Prediction, Software Metrics},
}

@ARTICLE{7582553,
author={L. Li and M. Harman and F. Wu and Y. Zhang},
journal={IEEE Transactions on Software Engineering},
title={The Value of Exact Analysis in Requirements Selection},
year={2016},
volume={PP},
number={99},
pages={1-1},
keywords={Optimization;Robustness;Software;Software algorithms;Software engineering;Stakeholders;Uncertainty;Exact multi-objective optimisation;Next release problem;Simulation optimisation;Software engineering},
doi={10.1109/TSE.2016.2615100},
ISSN={0098-5589},
month={},}

@article{Harman:2012:SSE:2379776.2379787,
 author = {Harman, Mark and Mansouri, S. Afshin and Zhang, Yuanyuan},
 title = {Search-based Software Engineering: Trends, Techniques and Applications},
 journal = {ACM Comput. Surv.},
 issue_date = {November 2012},
 volume = {45},
 number = {1},
 month = dec,
 year = {2012},
 issn = {0360-0300},
 pages = {11:1--11:61},
 articleno = {11},
 numpages = {61},
 url = {http://doi.acm.org/10.1145/2379776.2379787},
 doi = {10.1145/2379776.2379787},
 acmid = {2379787},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Software engineering, search-based techniques, survey},
}

@Inbook{Zhang2008,
author="Zhang, Yuanyuan
and Finkelstein, Anthony
and Harman, Mark",
title="Search Based Requirements Optimisation: Existing Work and Challenges",
bookTitle="Requirements Engineering: Foundation for Software Quality: 14th International Working Conference, REFSQ 2008 Montpellier, France, June 16-17, 2008 Proceedings",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="88--94",
isbn="978-3-540-69062-7",
doi="10.1007/978-3-540-69062-7_8",
url="http://dx.doi.org/10.1007/978-3-540-69062-7_8"
}

@article{Raiha2010203,
title = "A survey on search-based software design ",
journal = "Computer Science Review ",
volume = "4",
number = "4",
pages = "203 - 249",
year = "2010",
note = "",
issn = "1574-0137",
doi = "http://dx.doi.org/10.1016/j.cosrev.2010.06.001",
url = "http://www.sciencedirect.com/science/article/pii/S1574013710000390",
author = "Outi R{\"a}ih{\"a}",
keywords = "Search-based software engineering",
keywords = "Software design",
keywords = "Search algorithms",
keywords = "Software quality "
}

@inproceedings{Harman:2014:SBS:2648511.2648513,
 author = {Harman, M. and Jia, Y. and Krinke, J. and Langdon, W. B. and Petke, J. and Zhang, Y.},
 title = {Search Based Software Engineering for Software Product Line Engineering: A Survey and Directions for Future Work},
 booktitle = {Proceedings of the 18th International Software Product Line Conference - Volume 1},
 series = {SPLC '14},
 year = {2014},
 isbn = {978-1-4503-2740-4},
 location = {Florence, Italy},
 pages = {5--18},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2648511.2648513},
 doi = {10.1145/2648511.2648513},
 acmid = {2648513},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {SBSE, SPL, genetic programming, program synthesis},
}

@INPROCEEDINGS{5954405,
author={P. McMinn},
booktitle={2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops},
title={Search-Based Software Testing: Past, Present and Future},
year={2011},
pages={153-163},
keywords={genetic algorithms;program testing;search problems;automatic test data generation;genetic algorithm;infinite search space;metaheuristic optimizing search technique;optimization process;problem-specific fitness function;search-based software testing;Databases;Genetic algorithms;Optimization;Search problems;Software;Software testing;Search-Based Software Engineering;Search-Based Software Testing},
doi={10.1109/ICSTW.2011.100},
month={March},}

@article{mcminn2004search,
  title={Search-based software test data generation: A survey},
  author={McMinn, Phil},
  journal={Software Testing Verification and Reliability},
  volume={14},
  number={2},
  pages={105--156},
  year={2004},
  publisher={Citeseer}
}

@INPROCEEDINGS{1602376,
author={M. O'Keeffe and M. O. Cinneide},
booktitle={Conference on Software Maintenance and Reengineering (CSMR'06)},
title={Search-based software maintenance},
year={2006},
pages={10 pp.-260},
keywords={Java;object-oriented programming;search problems;software maintenance;software quality;Java program;automatic refactoring;object-oriented program;search-based software maintenance;software quality evaluation function;Computer science;Costs;Design automation;Educational institutions;Informatics;Java;Object oriented modeling;Object oriented programming;Search problems;Software maintenance},
doi={10.1109/CSMR.2006.49},
ISSN={1534-5351},
month={March},}

@INPROCEEDINGS{5635158,
author={J. T. de Souza and C. L. Maia and F. G. de Freitas and D. P. Coutinho},
booktitle={2nd International Symposium on Search Based Software Engineering},
title={The Human Competitiveness of Search Based Software Engineering},
year={2010},
pages={143-152},
keywords={human factors;optimisation;software engineering;SBSE problem formulation;human competitiveness;metaheuristics;multiobjective next release problem;multiobjective test case selection;search based software engineering;workgroup formation problem;Gallium;Humans;Search problems;Simulated annealing;Software;Software algorithms;Software engineering;SBSE;human competitiveness;human subjects;search based software engineering},
doi={10.1109/SSBSE.2010.25},
month={Sept},}

@Article{Pasareanu2009,
author="P{\u{a}}s{\u{a}}reanu, Corina S.
and Visser, Willem",
title="A survey of new trends in symbolic execution for software testing and analysis",
journal="International Journal on Software Tools for Technology Transfer",
year="2009",
volume="11",
number="4",
pages="339",
abstract="Symbolic execution is a well-known program analysis technique which represents program inputs with symbolic values instead of concrete, initialized, data and executes the program by manipulating program expressions involving the symbolic values. Symbolic execution has been proposed over three decades ago but recently it has found renewed interest in the research community, due in part to the progress in decision procedures, availability of powerful computers and new algorithmic developments. We provide here a survey of some of the new research trends in symbolic execution, with particular emphasis on applications to test generation and program analysis. We first describe an approach that handles complex programming constructs such as input recursive data structures, arrays, as well as multithreading. Furthermore, we describe recent hybrid techniques that combine concrete and symbolic execution to overcome some of the inherent limitations of symbolic execution, such as handling native code or availability of decision procedures for the application domain. We follow with a discussion of techniques that can be used to limit the (possibly infinite) number of symbolic configurations that need to be analyzed for the symbolic execution of looping programs. Finally, we give a short survey of interesting new applications, such as predictive testing, invariant inference, program repair, analysis of parallel numerical programs and differential symbolic execution.",
issn="1433-2787",
doi="10.1007/s10009-009-0118-1",
url="http://dx.doi.org/10.1007/s10009-009-0118-1"
}

@article{Adrion:1982:VVT:356876.356879,
 author = {Adrion, W. Richards and Branstad, Martha A. and Cherniavsky, John C.},
 title = {Validation, Verification, and Testing of Computer Software},
 journal = {ACM Comput. Surv.},
 issue_date = {June 1982},
 volume = {14},
 number = {2},
 month = jun,
 year = {1982},
 issn = {0360-0300},
 pages = {159--192},
 numpages = {34},
 url = {http://doi.acm.org/10.1145/356876.356879},
 doi = {10.1145/356876.356879},
 acmid = {356879},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article {STVR:STVR121,
author = {Binder, Robert V.},
title = {Testing object-oriented software: a survey},
journal = {Software Testing, Verification and Reliability},
volume = {6},
number = {3-4},
publisher = {John Wiley & Sons, Ltd},
issn = {1099-1689},
url = {http://dx.doi.org/10.1002/(SICI)1099-1689(199609/12)6:3/4<125::AID-STVR121>3.0.CO;2-X},
doi = {10.1002/(SICI)1099-1689(199609/12)6:3/4<125::AID-STVR121>3.0.CO;2-X},
pages = {125--252},
keywords = {abstract data types, built-in test, C++, CLOS, design for testability, Eiffel, fault taxonomy, formal methods, formal verification, integration testing, model validation, object-oriented analysis, object-oriented design, object-oriented testing, object-oriented programming, Objective-C, oracles, regression testing, Smalltalk, software process, test coverage, test adequacy, test case generation, test automation, unit testing},
year = {1996},
}

@INPROCEEDINGS{5440079,
author={G. Suganya and S. Neduncheliyan},
booktitle={2010 International Conference on Innovative Computing Technologies (ICICT)},
title={A study of Object Oriented testing techniques: Survey and challenges},
year={2010},
pages={1-5},
keywords={inheritance;object-oriented methods;program testing;software engineering;fault based testing;inheritance;integration testing;large scale system design;object oriented software;object oriented testing techniques;polymorphism;scenario based testing;software development;software testing methodologies;surface structure testing;system testing;unit testing;Computer science;Educational institutions;Fault detection;Software engineering;Software libraries;Software quality;Software systems;Software testing;Surface structures;System testing;Fault-based Testing;Scenario-based Testing;Surface Structure Testing},
doi={10.1109/ICINNOVCT.2010.5440079},
month={Feb},}

@article{SharmaSS14b,
  author    = {Chayanika Sharma and
               Sangeeta Sabharwal and
               Ritu Sibal},
  title     = {A Survey on Software Testing Techniques using Genetic Algorithm},
  journal   = {CoRR},
  volume    = {abs/1411.1154},
  year      = {2014},
  url       = {http://arxiv.org/abs/1411.1154},
  timestamp = {Mon, 01 Dec 2014 14:32:13 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/SharmaSS14b},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article {STVR:STVR430,
author = {Yoo, S. and Harman, M.},
title = {Regression testing minimization, selection and prioritization: a survey},
journal = {Software Testing, Verification and Reliability},
volume = {22},
number = {2},
publisher = {John Wiley & Sons, Ltd},
issn = {1099-1689},
url = {http://dx.doi.org/10.1002/stvr.430},
doi = {10.1002/stvr.430},
pages = {67--120},
keywords = {regression testing, test suite minimization, regression test selection, test case prioritization},
year = {2012},
}

@Inbook{Engstrom2010,
author="Engstr{\"o}m, Emelie
and Runeson, Per",
title="A Qualitative Survey of Regression Testing Practices",
bookTitle="Product-Focused Software Process Improvement: 11th International Conference, PROFES 2010, Limerick, Ireland, June 21-23, 2010. Proceedings",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="3--16",
isbn="978-3-642-13792-1",
doi="10.1007/978-3-642-13792-1_3",
url="http://dx.doi.org/10.1007/978-3-642-13792-1_3"
}

@INPROCEEDINGS{4402211,
author={M. J. P. v. d. Meulen and M. A. Revilla},
booktitle={The 18th IEEE International Symposium on Software Reliability (ISSRE '07)},
title={Correlations between Internal Software Metrics and Software Dependability in a Large Population of Small C/C++ Programs},
year={2007},
pages={203-208},
keywords={C++ language;correlation methods;probability;software metrics;C programs;C++ program;Halstead volume;correlation method;cyclomatic complexity;internal software metrics;look-up table;probability;software dependability;Decision making;Internet;Java;Mathematics;Phase frequency detector;Predictive models;Reliability engineering;Software metrics;Software reliability;Table lookup},
doi={10.1109/ISSRE.2007.12},
ISSN={1071-9458},
month={Nov},}